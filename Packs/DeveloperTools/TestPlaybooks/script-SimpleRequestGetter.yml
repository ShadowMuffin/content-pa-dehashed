comment: Read the contents of the debugging file and check that request debugging
  information is included in the file.
commonfields:
  id: SimpleRequestGetter
  version: -1
dockerimage: demisto/python3:3.7.4.977
enabled: true
name: SimpleRequestGetter
outputs:
- contextPath: SimpleRequest.Debug
  description: 'Whether request debugging information is included in the debugging
    file. '
  type: boolean
runas: DBotWeakRole
runonce: false
script: "from urllib3 import disable_warnings\n\n# disable insecure warnings\ndisable_warnings()\n\
  \nentries = demisto.executeCommand(\"getEntries\", {})\nreq_log_entries = []\nfor\
  \ entry in entries:\n    file_name = entry.get('File')\n    if file_name and file_name\
  \ == 'SimpleRequest.log':\n        req_log_entries.append(entry)\ncontents = req_log_entries[-1]\
  \ if req_log_entries else None\n\n# helpful for debugging\ndemisto.results(json.dumps(contents))\n\
  \nentry_id = contents.get('ID', '')\nfile_path = demisto.getFilePath(entry_id).get('path')\n\
  with open(file_path, 'r') as debug_file:\n    file_contents = debug_file.read()\n\
  \    debug = False\n    if 'Starting new HTTPS connection' in file_contents and\
  \ 'www.demisto.com' in file_contents:\n        debug = True\n\n    entry_context\
  \ = {'SimpleRequest': {'Debug': debug}}\n    if debug:\n        demisto.results({\n\
  \            'Type': entryTypes['note'],\n            'ContentsFormat': formats['markdown'],\n\
  \            'Contents': entry_context,\n            'HumanReadable': debug,\n \
  \           'EntryContext': entry_context\n        })\n    else:\n        demisto.results({\n\
  \            'Type': entryTypes['error'],\n            'ContentsFormat': formats['text'],\n\
  \            'Contents': 'Could not find requests debugging data inside the debugging\
  \ file.'\n        })"
scripttarget: 0
subtype: python3
tags: []
toversion: 4.1.9
type: python
