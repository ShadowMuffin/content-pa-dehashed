args:
- default: true
  description: 'A hash in MD5 format. If allSamples is set, this can be any one of
    the following: md5, sha1, sha256.'
  name: hash
  required: true
- description: If set, it will only fetch data from the given event ID.
  name: eventID
- description: If set, it will return all samples from events that have a match for
    the hash provided above
  name: allSamples
comment: Download malicious file sample from MISP
commonfields:
  id: misp_download_sample
  version: -1
deprecated: true
enabled: true
name: misp_download_sample
script: "import base64\n\n# Executing command if MISP V2 has an active instance\n\
  misp_v2 = False\nfor instance_name, data in demisto.getModules().items():\n    if\
  \ data.get('brand') == 'MISP V2' and data.get('state') == 'active':\n        misp_v2\
  \ = True\n        break\n\nif misp_v2:\n    demisto.results(demisto.executeCommand('misp-download-sample',\
  \ demisto.args()))\nelse:\n    if not get_hash_type(demisto.args().get('hash'))\
  \ == 'Unknown':\n        res = demisto.executeCommand('internal-misp-download-sample',\
  \ demisto.args() )\n        if 'message' in res[0]['Contents'] and res[0]['Contents']['message']\
  \ == 'No hits with the given parameters.':\n            demisto.results(res[0]['Contents']['message'])\n\
  \        else:\n            filename = res[0]['Contents']['result'][0]['filename']\n\
  \            fileContent = base64.b64decode(res[0]['Contents']['result'][0]['base64'])\n\
  \            demisto.results(fileResult(filename, fileContent))\n    else:\n   \
  \     return_error('Hash length is invalid.')\n\n"
scripttarget: 0
subtype: python2
tags: []
tests:
- MISP V2 Test
toversion: 4.1.9
type: python
