id: d66e5f86-e045-403f-819e-5058aa603c32
inputs: []
name: AWS - EC2 Test Playbook actions
outputs: []
starttaskid: '0'
tasks:
  '0':
    id: '0'
    nexttasks:
      '#none#':
      - '1'
    note: false
    separatecontext: false
    task:
      brand: ''
      id: 365be7a9-574d-427c-8125-33f7bf932890
      iscommand: false
      name: ''
      version: -1
    taskid: 365be7a9-574d-427c-8125-33f7bf932890
    type: start
    view: "{\n  \"position\": {\n    \"x\": 910,\n    \"y\": 50\n  }\n}"
  '1':
    id: '1'
    nexttasks:
      '#none#':
      - '31'
      - '30'
      - '32'
    note: false
    scriptarguments:
      region: {}
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
    separatecontext: false
    task:
      brand: AWS - EC2
      description: Allocates an Elastic IP address.
      id: 4aa07349-33b0-4ee9-851c-9e5fb15d8e70
      iscommand: true
      name: aws-ec2-allocate-address
      script: AWS - EC2|||aws-ec2-allocate-address
      type: regular
      version: -1
    taskid: 4aa07349-33b0-4ee9-851c-9e5fb15d8e70
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 910,\n    \"y\": 195\n  }\n}"
  '10':
    id: '10'
    nexttasks:
      '#none#':
      - '12'
    note: false
    scriptarguments:
      allocationId:
        simple: ${AWS.EC2.ElasticIPs.AllocationId}
      region: {}
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
    separatecontext: false
    task:
      brand: AWS - EC2
      description: Releases the specified Elastic IP address.
      id: 9b4d1372-5f9e-4a18-8f8a-f3dbbc02fb27
      iscommand: true
      name: aws-ec2-release-address
      script: AWS - EC2|||aws-ec2-release-address
      type: regular
      version: -1
    taskid: 9b4d1372-5f9e-4a18-8f8a-f3dbbc02fb27
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 910,\n    \"y\": 7370\n  }\n}"
  '11':
    id: '11'
    nexttasks:
      '#none#':
      - '19'
    note: false
    scriptarguments:
      instanceIds:
        simple: ${AWS.EC2.Instances.InstanceId}
      region: {}
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
    separatecontext: false
    task:
      brand: AWS - EC2
      description: Starts an Amazon EBS-backed instance that you have previously stopped.
      id: cd812038-6402-496e-8f44-c2a30d18b65a
      iscommand: true
      name: aws-ec2-start-instances
      script: AWS - EC2|||aws-ec2-start-instances
      type: regular
      version: -1
    taskid: cd812038-6402-496e-8f44-c2a30d18b65a
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 910,\n    \"y\": 7895\n  }\n}"
  '12':
    id: '12'
    nexttasks:
      '#none#':
      - '21'
    note: false
    scriptarguments:
      instanceIds:
        simple: ${AWS.EC2.Instances.InstanceId}
      region: {}
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
    separatecontext: false
    task:
      brand: AWS - EC2
      description: Stops an Amazon EBS-backed instance.
      id: 4aa82372-623f-485b-8b17-268ba3eaa3dc
      iscommand: true
      name: aws-ec2-stop-instances
      script: AWS - EC2|||aws-ec2-stop-instances
      type: regular
      version: -1
    taskid: 4aa82372-623f-485b-8b17-268ba3eaa3dc
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 910,\n    \"y\": 7545\n  }\n}"
  '13':
    id: '13'
    nexttasks:
      '#none#':
      - '22'
    note: false
    scriptarguments:
      instanceIds:
        simple: ${AWS.EC2.Instances.InstanceId}
      region: {}
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
    separatecontext: false
    task:
      brand: AWS - EC2
      description: Shuts down one or more instances. This operation is idempotent;
        if you terminate an instance more than once, each call succeeds.
      id: 8b7e1bb5-4dc7-44ac-873c-27f114859533
      iscommand: true
      name: aws-ec2-terminate-instances
      script: AWS - EC2|||aws-ec2-terminate-instances
      type: regular
      version: -1
    taskid: 8b7e1bb5-4dc7-44ac-873c-27f114859533
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 910,\n    \"y\": 8245\n  }\n}"
  '14':
    id: '14'
    nexttasks:
      '#none#':
      - '55'
      - '53'
      - '54'
    note: false
    scriptarguments:
      availabilityZone:
        simple: ${AWS.EC2.Instances.Placement.AvailabilityZone}
      encrypted: {}
      iops: {}
      kmsKeyId: {}
      region: {}
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
      size:
        simple: '20'
      snapshotId: {}
      tags: {}
      volumeType:
        simple: gp2
    separatecontext: false
    task:
      brand: AWS - EC2
      description: Creates an EBS volume that can be attached to an instance in the
        same Availability Zone.
      id: 3bb812e2-2a34-4ed7-8f1a-733140c727bd
      iscommand: true
      name: aws-ec2-create-volume
      script: AWS - EC2|||aws-ec2-create-volume
      type: regular
      version: -1
    taskid: 3bb812e2-2a34-4ed7-8f1a-733140c727bd
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 910,\n    \"y\": 5795\n  }\n}"
  '15':
    id: '15'
    nexttasks:
      '#none#':
      - '58'
      - '56'
      - '57'
    note: false
    scriptarguments:
      device:
        simple: /dev/xvdb
      instanceId:
        simple: ${AWS.EC2.Instances.InstanceId}
      region: {}
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
      volumeId:
        simple: ${AWS.EC2.Volumes.VolumeId}
    separatecontext: false
    task:
      brand: AWS - EC2
      description: Attaches an EBS volume to a running or stopped instance and exposes
        it to the instance with the specified device name.
      id: a2940b2b-7de9-4c3f-8979-95b6adc81069
      iscommand: true
      name: aws-ec2-attach-volume
      script: AWS - EC2|||aws-ec2-attach-volume
      type: regular
      version: -1
    taskid: a2940b2b-7de9-4c3f-8979-95b6adc81069
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 910,\n    \"y\": 6145\n  }\n}"
  '16':
    id: '16'
    nexttasks:
      '#none#':
      - '61'
      - '60'
      - '59'
    note: false
    scriptarguments:
      device: {}
      force: {}
      instanceId: {}
      region: {}
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
      volumeId:
        simple: ${AWS.EC2.Volumes.VolumeId}
    separatecontext: false
    task:
      brand: AWS - EC2
      description: Detaches an EBS volume from an instance.
      id: 72d8e6c9-14c2-4f33-8e2a-85c088708930
      iscommand: true
      name: aws-ec2-detach-volume
      script: AWS - EC2|||aws-ec2-detach-volume
      type: regular
      version: -1
    taskid: 72d8e6c9-14c2-4f33-8e2a-85c088708930
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 910,\n    \"y\": 6495\n  }\n}"
  '17':
    id: '17'
    nexttasks:
      '#none#':
      - '63'
    note: false
    scriptarguments:
      region: {}
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
      volumeId:
        simple: ${AWS.EC2.Volumes.VolumeId}
    separatecontext: false
    task:
      brand: AWS - EC2
      description: Deletes the specified EBS volume. The volume must be in the available
        state (not attached to an instance).
      id: 97439a12-ceab-4840-8a71-4715b705fa1e
      iscommand: true
      name: aws-ec2-delete-volume
      script: AWS - EC2|||aws-ec2-delete-volume
      type: regular
      version: -1
    taskid: 97439a12-ceab-4840-8a71-4715b705fa1e
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 910,\n    \"y\": 6845\n  }\n}"
  '18':
    id: '18'
    nexttasks:
      '#none#':
      - '41'
      - '40'
      - '39'
      - '43'
      - '42'
    note: false
    scriptarguments:
      count:
        simple: '1'
      deviceName:
        simple: /dev/xvda
      disableApiTermination: {}
      ebsDeleteOnTermination:
        simple: 'True'
      ebsEncrypted: {}
      ebsIops: {}
      ebsKmsKeyId: {}
      ebsOptimized: {}
      ebsSnapshotId: {}
      ebsVolumeSize:
        simple: '50'
      ebsVolumeType:
        simple: gp2
      iamInstanceProfileArn: {}
      iamInstanceProfileName: {}
      imageId:
        simple: ${AWS.EC2.Images.ImageId}
      instanceType:
        simple: t2.small
      keyName:
        simple: frankfurt-test
      launchTemplateId: {}
      launchTemplateName: {}
      launchTemplateVersion: {}
      region: {}
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
      securityGroupIds:
        simple: ${AWS.EC2.SecurityGroups.GroupId}
      securityGroups: {}
      subnetId: {}
      tags:
        simple: key=Name,Value=PlaybookTest
      userData: {}
    separatecontext: false
    task:
      brand: AWS - EC2
      description: Launches the specified number of instances using an AMI for which
        you have permissions. You can create a launch template , which is a resource
        that contains the parameters to launch an instance. When you launch an instance
        using RunInstances , you can specify the launch template instead of specifying
        the launch parameters. An instance is ready for you to use when its in the
        running state. You can check the state of your instance using DescribeInstances.
      id: 0260c93e-a497-436b-8bfe-e06ef712d6bd
      iscommand: true
      name: aws-ec2-run-instances
      script: AWS - EC2|||aws-ec2-run-instances
      type: regular
      version: -1
    taskid: 0260c93e-a497-436b-8bfe-e06ef712d6bd
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 910,\n    \"y\": 1595\n  }\n}"
  '19':
    id: '19'
    nexttasks:
      '#none#':
      - '13'
    note: false
    scriptarguments:
      filter: {}
      instanceIds:
        simple: ${AWS.EC2.Instances.InstanceId}
      region: {}
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
      waiterDelay: {}
      waiterMaxAttempts: {}
    separatecontext: false
    task:
      brand: AWS - EC2
      description: A waiter function that runs every 15  seconds until a successful
        state is reached.
      id: a0d22c52-0f65-4730-826b-29aa05ce4eeb
      iscommand: true
      name: aws-ec2-waiter-instance-running
      script: AWS - EC2|||aws-ec2-waiter-instance-running
      type: regular
      version: -1
    taskid: a0d22c52-0f65-4730-826b-29aa05ce4eeb
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 910,\n    \"y\": 8070\n  }\n}"
  '2':
    id: '2'
    nexttasks:
      '#none#':
      - '44'
    note: false
    scriptarguments:
      allocationId:
        simple: ${AWS.EC2.ElasticIPs.AllocationId}
      allowReassociation: {}
      instanceId:
        simple: ${AWS.EC2.Instances.InstanceId}
      networkInterfaceId: {}
      privateIpAddress: {}
      region: {}
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
    separatecontext: false
    task:
      brand: AWS - EC2
      description: Associates an Elastic IP address with an instance or a network
        interface.
      id: 15f5580d-e1a9-439c-8550-4f1e5f19b330
      iscommand: true
      name: aws-ec2-associate-address
      script: AWS - EC2|||aws-ec2-associate-address
      type: regular
      version: -1
    taskid: 15f5580d-e1a9-439c-8550-4f1e5f19b330
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 910,\n    \"y\": 3170\n  }\n}"
  '20':
    id: '20'
    nexttasks:
      '#none#':
      - '70'
    note: false
    scriptarguments:
      filter: {}
      instanceIds:
        simple: ${AWS.EC2.Instances.InstanceId}
      region: {}
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
      waiterDelay: {}
      waiterMaxAttempts: {}
    separatecontext: false
    task:
      brand: AWS - EC2
      description: A waiter function that runs every 15  seconds until a successful
        state is reached
      id: 64f606bf-b770-44c1-8019-cebfa8f03397
      iscommand: true
      name: aws-ec2-waiter-instance-status-ok
      script: AWS - EC2|||aws-ec2-waiter-instance-status-ok
      type: regular
      version: -1
    taskid: 64f606bf-b770-44c1-8019-cebfa8f03397
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 910,\n    \"y\": 1945\n  }\n}"
  '21':
    id: '21'
    nexttasks:
      '#none#':
      - '11'
    note: false
    scriptarguments:
      filter: {}
      instanceIds:
        simple: ${AWS.EC2.Instances.InstanceId}
      region: {}
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
      waiterDelay: {}
      waiterMaxAttempts: {}
    separatecontext: false
    task:
      brand: AWS - EC2
      description: A waiter function that runs every 15  seconds until a successful
        state is reached
      id: 63febf06-96bd-4cb7-8435-2dba189f2f5d
      iscommand: true
      name: aws-ec2-waiter-instance-stopped
      script: AWS - EC2|||aws-ec2-waiter-instance-stopped
      type: regular
      version: -1
    taskid: 63febf06-96bd-4cb7-8435-2dba189f2f5d
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 910,\n    \"y\": 7720\n  }\n}"
  '22':
    id: '22'
    nexttasks:
      '#none#':
      - '29'
    note: false
    scriptarguments:
      filter: {}
      instanceIds:
        simple: ${AWS.EC2.Instances.InstanceId}
      region: {}
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
      waiterDelay: {}
      waiterMaxAttempts: {}
    separatecontext: false
    task:
      brand: AWS - EC2
      description: A waiter function that runs every 15  seconds until a successful
        state is reached
      id: a53f24dc-7981-4af9-89ba-1e95a95297be
      iscommand: true
      name: aws-ec2-waiter-instance-terminated
      script: AWS - EC2|||aws-ec2-waiter-instance-terminated
      type: regular
      version: -1
    taskid: a53f24dc-7981-4af9-89ba-1e95a95297be
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 910,\n    \"y\": 8420\n  }\n}"
  '23':
    id: '23'
    nexttasks:
      '#none#':
      - '66'
    note: false
    scriptarguments:
      executableUsers: {}
      filters: {}
      imageIds:
        simple: ${AWS.EC2.Images.[1].ImageId}
      owners: {}
      region: {}
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
      waiterDelay: {}
      waiterMaxAttempts: {}
    separatecontext: false
    task:
      brand: AWS - EC2
      description: A waiter function that waits until image is avilable
      id: 72261e80-f1d7-46ca-80f6-c150a0d29148
      iscommand: true
      name: aws-ec2-waiter-image-available
      script: AWS - EC2|||aws-ec2-waiter-image-available
      type: regular
      version: -1
    taskid: 72261e80-f1d7-46ca-80f6-c150a0d29148
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 910,\n    \"y\": 5270\n  }\n}"
  '24':
    id: '24'
    nexttasks:
      '#none#':
      - '67'
    note: false
    scriptarguments:
      filters: {}
      ownerIds: {}
      region: {}
      restorableByUserIds: {}
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
      snapshotIds:
        simple: ${AWS.EC2.Snapshots.SnapshotId}
      waiterDelay: {}
      waiterMaxAttempts: {}
    separatecontext: false
    task:
      brand: AWS - EC2
      description: A waiter function that waits until the snapshot is complate
      id: 3d68dea3-8e6e-49de-83b1-7962325062dd
      iscommand: true
      name: aws-ec2-waiter-snapshot_completed
      script: AWS - EC2|||aws-ec2-waiter-snapshot_completed
      type: regular
      version: -1
    taskid: 3d68dea3-8e6e-49de-83b1-7962325062dd
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 910,\n    \"y\": 4045\n  }\n}"
  '25':
    id: '25'
    nexttasks:
      '#none#':
      - '34'
      - '35'
      - '33'
    note: false
    scriptarguments:
      executableUsers: {}
      filters:
        simple: Name=name,Values=CentOS Linux 7 x86_64 HVM EBS*
      owners:
        simple: aws-marketplace
      region: {}
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
    separatecontext: false
    task:
      brand: AWS - EC2
      description: Get The latest AMI
      id: 1be14a97-9bf5-4b67-8fd3-d60743a17f67
      iscommand: true
      name: aws-ec2-get-latest-ami
      script: AWS - EC2|||aws-ec2-get-latest-ami
      type: regular
      version: -1
    taskid: 1be14a97-9bf5-4b67-8fd3-d60743a17f67
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 910,\n    \"y\": 545\n  }\n}"
  '26':
    id: '26'
    nexttasks:
      '#none#':
      - '37'
      - '36'
      - '38'
    note: false
    scriptarguments:
      description:
        simple: Demisto-PlaybookTest
      groupName:
        simple: Demisto-PlaybookTest
      region: {}
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
      vpcId:
        simple: vpc-7bfc8e10
    separatecontext: false
    task:
      brand: AWS - EC2
      description: Creates a security group.
      id: a812275d-aec3-41f3-8ecc-d79637a24f94
      iscommand: true
      name: aws-ec2-create-security-group
      script: AWS - EC2|||aws-ec2-create-security-group
      type: regular
      version: -1
    taskid: a812275d-aec3-41f3-8ecc-d79637a24f94
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 910,\n    \"y\": 895\n  }\n}"
  '27':
    id: '27'
    note: false
    scriptarguments:
      groupId:
        simple: ${AWS.EC2.SecurityGroups.GroupId}
      groupName: {}
      region: {}
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
    separatecontext: false
    task:
      brand: AWS - EC2
      description: Deletes a security group.
      id: c2e32871-45ce-4677-800c-2342583b2c38
      iscommand: true
      name: aws-ec2-delete-security-group
      script: AWS - EC2|||aws-ec2-delete-security-group
      type: regular
      version: -1
    taskid: c2e32871-45ce-4677-800c-2342583b2c38
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 910,\n    \"y\": 8770\n  }\n}"
  '28':
    id: '28'
    nexttasks:
      '#none#':
      - '69'
    note: false
    scriptarguments:
      cidrIp:
        simple: 0.0.0.0/0
      fromPort:
        simple: '22'
      groupId:
        simple: ${AWS.EC2.SecurityGroups.GroupId}
      ipProtocol:
        simple: TCP
      region: {}
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
      sourceSecurityGroupName: {}
      toPort:
        simple: '22'
    separatecontext: false
    task:
      brand: AWS - EC2
      description: Adds ingress rule to a security group.
      id: 0ad15846-9c50-4d9f-86e8-f4f66b5a42c8
      iscommand: true
      name: aws-ec2-authorize-security-group-ingress-rule
      script: AWS - EC2|||aws-ec2-authorize-security-group-ingress-rule
      type: regular
      version: -1
    taskid: 0ad15846-9c50-4d9f-86e8-f4f66b5a42c8
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 910,\n    \"y\": 1245\n  }\n}"
  '29':
    id: '29'
    nexttasks:
      '#none#':
      - '27'
    note: false
    scriptarguments:
      cidrIp:
        simple: 0.0.0.0/0
      fromPort:
        simple: '22'
      groupId:
        simple: ${AWS.EC2.SecurityGroups.GroupId}
      ipProtocol:
        simple: TCP
      region: {}
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
      sourceSecurityGroupName: {}
      toPort:
        simple: '22'
    separatecontext: false
    task:
      brand: AWS - EC2
      description: Removes egress rule from a security group. To remove a rule, the
        values that you specify (for example, ports) must match the existing rule's
        values exactly.
      id: 692065ec-88f9-4160-852d-ebc94dfb93f9
      iscommand: true
      name: aws-ec2-revoke-security-group-ingress-rule
      script: AWS - EC2|||aws-ec2-revoke-security-group-ingress-rule
      type: regular
      version: -1
    taskid: 692065ec-88f9-4160-852d-ebc94dfb93f9
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 910,\n    \"y\": 8595\n  }\n}"
  '3':
    id: '3'
    nexttasks:
      '#none#':
      - '46'
      - '45'
      - '47'
    note: false
    scriptarguments:
      description:
        simple: test
      region: {}
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
      tags: {}
      volumeId:
        simple: ${AWS.EC2.Instances.BlockDeviceMappings.Ebs.VolumeId}
    separatecontext: false
    task:
      brand: AWS - EC2
      description: Creates a snapshot of an EBS volume and stores it in Amazon S3.
        You can use snapshots for backups, to make copies of EBS volumes, and to save
        data before shutting down an instance.
      id: fca6d93b-45d1-488b-81a1-de3bab10b3c9
      iscommand: true
      name: aws-ec2-create-snapshot
      script: AWS - EC2|||aws-ec2-create-snapshot
      type: regular
      version: -1
    taskid: fca6d93b-45d1-488b-81a1-de3bab10b3c9
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 910,\n    \"y\": 3695\n  }\n}"
  '30':
    id: '30'
    nexttasks:
      '#none#':
      - '25'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.EC2.ElasticIPs.AllocationId
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: e9450631-5f3d-4dc8-87ad-c924b370ea5b
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: e9450631-5f3d-4dc8-87ad-c924b370ea5b
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 480,\n    \"y\": 370\n  }\n}"
  '31':
    id: '31'
    nexttasks:
      '#none#':
      - '25'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.EC2.ElasticIPs.Domain
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: 30669d1a-294b-47b1-8b99-6ea76e5a3cc5
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: 30669d1a-294b-47b1-8b99-6ea76e5a3cc5
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 910,\n    \"y\": 370\n  }\n}"
  '32':
    id: '32'
    nexttasks:
      '#none#':
      - '25'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.EC2.ElasticIPs.PublicIp
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: c00b6c3b-35b4-486f-8c27-dfde0c92f65f
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: c00b6c3b-35b4-486f-8c27-dfde0c92f65f
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 1340,\n    \"y\": 370\n  }\n}"
  '33':
    id: '33'
    nexttasks:
      '#none#':
      - '26'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.EC2.Images.CreationDate
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: e316159b-21c6-448c-8a22-e0ee34d037b9
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: e316159b-21c6-448c-8a22-e0ee34d037b9
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 480,\n    \"y\": 720\n  }\n}"
  '34':
    id: '34'
    nexttasks:
      '#none#':
      - '26'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.EC2.Images.ImageId
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: 2d059368-16ff-4c9d-863d-2dae9c2ae662
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: 2d059368-16ff-4c9d-863d-2dae9c2ae662
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 910,\n    \"y\": 720\n  }\n}"
  '35':
    id: '35'
    nexttasks:
      '#none#':
      - '26'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.EC2.Images.ImageType
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: ec427bd8-ca7f-4813-841b-1c1d6571e4b7
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: ec427bd8-ca7f-4813-841b-1c1d6571e4b7
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 1340,\n    \"y\": 720\n  }\n}"
  '36':
    id: '36'
    nexttasks:
      '#none#':
      - '28'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.EC2.SecurityGroups.VpcId
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: c4b1f30e-11d9-4a9f-8055-a5e996db441c
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: c4b1f30e-11d9-4a9f-8055-a5e996db441c
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 480,\n    \"y\": 1070\n  }\n}"
  '37':
    id: '37'
    nexttasks:
      '#none#':
      - '28'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.EC2.SecurityGroups.Description
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: db4ee8a3-01c1-4842-8d44-2d967e6e8ddd
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: db4ee8a3-01c1-4842-8d44-2d967e6e8ddd
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 910,\n    \"y\": 1070\n  }\n}"
  '38':
    id: '38'
    nexttasks:
      '#none#':
      - '28'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.EC2.SecurityGroups.GroupName
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: bab6b383-dd1d-4524-89db-473eedbb47b1
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: bab6b383-dd1d-4524-89db-473eedbb47b1
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 1340,\n    \"y\": 1070\n  }\n}"
  '39':
    id: '39'
    nexttasks:
      '#none#':
      - '20'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.EC2.Instances.InstanceType
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: b198c853-5559-46ff-87ce-7cc57a63b99f
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: b198c853-5559-46ff-87ce-7cc57a63b99f
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 50,\n    \"y\": 1770\n  }\n}"
  '4':
    id: '4'
    nexttasks:
      '#none#':
      - '7'
    note: false
    scriptarguments:
      region: {}
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
      snapshotId:
        simple: ${AWS.EC2.Snapshots.SnapshotId}
    separatecontext: false
    task:
      brand: AWS - EC2
      description: Deletes the specified snapshot.
      id: e9482263-cd96-47cb-8489-ab9ad02306a2
      iscommand: true
      name: aws-ec2-delete-snapshot
      script: AWS - EC2|||aws-ec2-delete-snapshot
      type: regular
      version: -1
    taskid: e9482263-cd96-47cb-8489-ab9ad02306a2
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 910,\n    \"y\": 4395\n  }\n}"
  '40':
    id: '40'
    nexttasks:
      '#none#':
      - '20'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.EC2.Instances.SecurityGroups.GroupId
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: 9a56cbdc-a759-439d-8fe7-27033e30a3c0
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: 9a56cbdc-a759-439d-8fe7-27033e30a3c0
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 480,\n    \"y\": 1770\n  }\n}"
  '41':
    id: '41'
    nexttasks:
      '#none#':
      - '20'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.EC2.Instances.InstanceId
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: f17efbd4-8dde-42bf-8a2e-4ded2d456140
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: f17efbd4-8dde-42bf-8a2e-4ded2d456140
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 910,\n    \"y\": 1770\n  }\n}"
  '42':
    id: '42'
    nexttasks:
      '#none#':
      - '20'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.EC2.Instances.Monitoring.State
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: d58ae543-a310-430b-8978-055151d0d863
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: d58ae543-a310-430b-8978-055151d0d863
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 1340,\n    \"y\": 1770\n  }\n}"
  '43':
    id: '43'
    nexttasks:
      '#none#':
      - '20'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.EC2.Instances.SubnetId
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: b4404c3f-98b2-4643-868a-1c8104b08d16
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: b4404c3f-98b2-4643-868a-1c8104b08d16
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 1770,\n    \"y\": 1770\n  }\n}"
  '44':
    id: '44'
    nexttasks:
      '#none#':
      - '68'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.EC2.ElasticIPs.AssociationId
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: 6e4303be-a69f-430a-8777-9de8ce95a4fc
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: 6e4303be-a69f-430a-8777-9de8ce95a4fc
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 910,\n    \"y\": 3345\n  }\n}"
  '45':
    id: '45'
    nexttasks:
      '#none#':
      - '24'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.EC2.Snapshots.SnapshotId
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: b30bea42-3071-44af-8949-eb58bcff48ff
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: b30bea42-3071-44af-8949-eb58bcff48ff
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 480,\n    \"y\": 3870\n  }\n}"
  '46':
    id: '46'
    nexttasks:
      '#none#':
      - '24'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.EC2.Snapshots.State
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: 7b279655-bf6e-497d-8a94-bae5357c9cf7
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: 7b279655-bf6e-497d-8a94-bae5357c9cf7
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 910,\n    \"y\": 3870\n  }\n}"
  '47':
    id: '47'
    nexttasks:
      '#none#':
      - '24'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.EC2.Snapshots.StartTime
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: 2503e053-c276-4334-873c-0f7cc7a21634
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: 2503e053-c276-4334-873c-0f7cc7a21634
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 1340,\n    \"y\": 3870\n  }\n}"
  '48':
    id: '48'
    nexttasks:
      '#none#':
      - '5'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.EC2.Volumes.Modification.VolumeId
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: 95ab4445-6f47-4e43-8ab1-f3363d9d6d1f
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: 95ab4445-6f47-4e43-8ab1-f3363d9d6d1f
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 480,\n    \"y\": 4745\n  }\n}"
  '49':
    id: '49'
    nexttasks:
      '#none#':
      - '5'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.EC2.Volumes.Modification.ModificationState
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: ee49871f-fdb4-4ed2-886c-661d50870103
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: ee49871f-fdb4-4ed2-886c-661d50870103
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 910,\n    \"y\": 4745\n  }\n}"
  '5':
    id: '5'
    nexttasks:
      '#none#':
      - '52'
      - '51'
    note: false
    scriptarguments:
      description:
        simple: test
      instanceId:
        simple: ${AWS.EC2.Instances.InstanceId}
      name:
        simple: Test
      noReboot:
        simple: 'True'
      region: {}
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
    separatecontext: false
    task:
      brand: AWS - EC2
      description: Creates an Amazon EBS-backed AMI from an Amazon EBS-backed instance
        that is either running or stopped.
      id: 0abe0a82-afeb-4e9d-82d9-16df8b16fa30
      iscommand: true
      name: aws-ec2-create-image
      script: AWS - EC2|||aws-ec2-create-image
      type: regular
      version: -1
    taskid: 0abe0a82-afeb-4e9d-82d9-16df8b16fa30
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 910,\n    \"y\": 4920\n  }\n}"
  '50':
    id: '50'
    nexttasks:
      '#none#':
      - '5'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.EC2.Volumes.Modification.OriginalSize
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: b4491887-ab68-4240-8746-71cd62c48c62
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: b4491887-ab68-4240-8746-71cd62c48c62
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 1340,\n    \"y\": 4745\n  }\n}"
  '51':
    id: '51'
    nexttasks:
      '#none#':
      - '23'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.EC2.Images.Name
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: c3bfe8c7-8a9b-4219-8900-57e57f8ef2d8
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: c3bfe8c7-8a9b-4219-8900-57e57f8ef2d8
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 695,\n    \"y\": 5095\n  }\n}"
  '52':
    id: '52'
    nexttasks:
      '#none#':
      - '23'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.EC2.Images.ImageId
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: 4c1afaab-7582-42f8-8bd7-000b7476bb17
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: 4c1afaab-7582-42f8-8bd7-000b7476bb17
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 1125,\n    \"y\": 5095\n  }\n}"
  '53':
    id: '53'
    nexttasks:
      '#none#':
      - '15'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.EC2.Volumes.Iops
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: 06458db2-6ec1-4c06-8cdf-033e90885ffb
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: 06458db2-6ec1-4c06-8cdf-033e90885ffb
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 480,\n    \"y\": 5970\n  }\n}"
  '54':
    id: '54'
    nexttasks:
      '#none#':
      - '15'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.EC2.Volumes.VolumeId
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: 560a025e-1b13-4f9c-8d6b-78c5eba6ec85
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: 560a025e-1b13-4f9c-8d6b-78c5eba6ec85
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 910,\n    \"y\": 5970\n  }\n}"
  '55':
    id: '55'
    nexttasks:
      '#none#':
      - '15'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.EC2.Volumes.Size
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: 5acde28c-b1cc-4bc7-8a8b-47bda9c56e30
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: 5acde28c-b1cc-4bc7-8a8b-47bda9c56e30
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 1340,\n    \"y\": 5970\n  }\n}"
  '56':
    id: '56'
    nexttasks:
      '#none#':
      - '16'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.EC2.Volumes.Attachments.Device
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: 38b9a152-8dd9-4a30-85eb-7433147f63b5
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: 38b9a152-8dd9-4a30-85eb-7433147f63b5
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 480,\n    \"y\": 6320\n  }\n}"
  '57':
    id: '57'
    nexttasks:
      '#none#':
      - '16'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.EC2.Volumes.Attachments.VolumeId
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: cdb0ee85-30ed-4e29-89b0-7cd347837713
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: cdb0ee85-30ed-4e29-89b0-7cd347837713
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 910,\n    \"y\": 6320\n  }\n}"
  '58':
    id: '58'
    nexttasks:
      '#none#':
      - '16'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.EC2.Volumes.Attachments.AttachTime
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: 1b8c5995-fc14-479d-82d4-535d33251a6e
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: 1b8c5995-fc14-479d-82d4-535d33251a6e
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 1340,\n    \"y\": 6320\n  }\n}"
  '59':
    id: '59'
    nexttasks:
      '#none#':
      - '17'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.EC2.Volumes.Attachments.InstanceId
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: 98d721ad-4800-4a7d-8f0f-3e55a45fc396
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: 98d721ad-4800-4a7d-8f0f-3e55a45fc396
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 480,\n    \"y\": 6670\n  }\n}"
  '6':
    id: '6'
    nexttasks:
      '#none#':
      - '14'
    note: false
    scriptarguments:
      imageId:
        simple: ${AWS.EC2.Images.[1].ImageId}
      region: {}
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
    separatecontext: false
    task:
      brand: AWS - EC2
      description: Deregisters the specified AMI.
      id: ef2ecab1-df53-4912-8b10-b0d5ce69fae6
      iscommand: true
      name: aws-ec2-deregister-image
      script: AWS - EC2|||aws-ec2-deregister-image
      type: regular
      version: -1
    taskid: ef2ecab1-df53-4912-8b10-b0d5ce69fae6
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 910,\n    \"y\": 5620\n  }\n}"
  '60':
    id: '60'
    nexttasks:
      '#none#':
      - '17'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.EC2.Volumes.Attachments.AttachTime
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: 84074114-c438-40ad-8e3e-1cd41161584d
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: 84074114-c438-40ad-8e3e-1cd41161584d
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 910,\n    \"y\": 6670\n  }\n}"
  '61':
    id: '61'
    nexttasks:
      '#none#':
      - '17'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.EC2.Volumes.Attachments.Device
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: ba0ca8e6-d5fc-46b2-8849-37fdab3cc88d
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: ba0ca8e6-d5fc-46b2-8849-37fdab3cc88d
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 1340,\n    \"y\": 6670\n  }\n}"
  '62':
    id: '62'
    nexttasks:
      '#none#':
      - '8'
    note: false
    scriptarguments:
      filters: {}
      instanceIds:
        simple: ${AWS.EC2.Instances.InstanceId}
      region: {}
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
    separatecontext: false
    task:
      brand: AWS - EC2
      description: Describes one or more of your instances.
      id: 81cca167-9479-4abb-8d66-47e370d93e81
      iscommand: true
      name: aws-ec2-describe-instances
      script: AWS - EC2|||aws-ec2-describe-instances
      type: regular
      version: -1
    taskid: 81cca167-9479-4abb-8d66-47e370d93e81
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 910,\n    \"y\": 2820\n  }\n}"
  '63':
    id: '63'
    nexttasks:
      '#none#':
      - '9'
    note: false
    scriptarguments:
      instanceIds: {}
    separatecontext: false
    task:
      brand: AWS - EC2_copy
      description: Requests a reboot of one or more instances. This operation is asynchronous;
        it only queues a request to reboot the specified instances. The operation
        succeeds if the instances are valid and belong to you. Requests to reboot
        terminated instances are ignored.  If an instance does not cleanly shut down
        within four minutes, Amazon EC2 performs a hard reboot.
      id: cd9f9a22-9431-418d-8f27-309b6ea25e65
      iscommand: true
      name: aws-ec2-reboot-instances
      script: AWS - EC2_copy|||aws-ec2-reboot-instances
      type: regular
      version: -1
    taskid: cd9f9a22-9431-418d-8f27-309b6ea25e65
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 910,\n    \"y\": 7020\n  }\n}"
  '64':
    id: '64'
    nexttasks:
      '#none#':
      - '62'
    note: false
    scriptarguments:
      instancesIds:
        simple: ${AWS.EC2.Instances.InstanceId}
    separatecontext: false
    task:
      brand: AWS - EC2_copy
      description: Disables detailed monitoring for a running instance.
      id: 99e87193-f9fd-4766-8552-77919f5742a8
      iscommand: true
      name: aws-ec2-unmonitor-instances
      script: AWS - EC2_copy|||aws-ec2-unmonitor-instances
      type: regular
      version: -1
    taskid: 99e87193-f9fd-4766-8552-77919f5742a8
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 910,\n    \"y\": 2645\n  }\n}"
  '65':
    id: '65'
    nexttasks:
      '#none#':
      - '64'
    note: false
    scriptarguments:
      instancesIds:
        simple: ${AWS.EC2.Instances.InstanceId}
    separatecontext: false
    task:
      brand: AWS - EC2_copy
      description: Enables detailed monitoring for a running instance.
      id: 5845d4a8-632f-4c83-8e35-437f047bcbab
      iscommand: true
      name: aws-ec2-monitor-instances
      script: AWS - EC2_copy|||aws-ec2-monitor-instances
      type: regular
      version: -1
    taskid: 5845d4a8-632f-4c83-8e35-437f047bcbab
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 910,\n    \"y\": 2470\n  }\n}"
  '66':
    id: '66'
    nexttasks:
      '#none#':
      - '6'
    note: false
    scriptarguments:
      clientToken: {}
      description: {}
      encrypted: {}
      kmsKeyId: {}
      name:
        simple: test2
      sourceImageId:
        simple: ${AWS.EC2.Images.ImageId}
      sourceRegion:
        simple: eu-central-1
    separatecontext: false
    task:
      brand: AWS - EC2_copy
      description: Initiates the copy of an AMI from the specified source region to
        the current region.
      id: 54c89ed3-9696-49bb-8285-7cf09d0d19bb
      iscommand: true
      name: aws-ec2-copy-image
      script: AWS - EC2_copy|||aws-ec2-copy-image
      type: regular
      version: -1
    taskid: 54c89ed3-9696-49bb-8285-7cf09d0d19bb
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 910,\n    \"y\": 5445\n  }\n}"
  '67':
    id: '67'
    nexttasks:
      '#none#':
      - '4'
    note: false
    scriptarguments:
      description: {}
      encrypted: {}
      kmsKeyId: {}
      sourceRegion:
        simple: eu-central-1
      sourceSnapshotId:
        simple: ${AWS.EC2.Snapshots.SnapshotId}
    separatecontext: false
    task:
      brand: AWS - EC2_copy
      description: Copies a point-in-time snapshot of an EBS volume and stores it
        in Amazon S3. You can copy the snapshot within the same region or from one
        region to another.
      id: ccb58b2a-52f1-48a8-8aaa-6b591a5bad47
      iscommand: true
      name: aws-ec2-copy-snapshot
      script: AWS - EC2_copy|||aws-ec2-copy-snapshot
      type: regular
      version: -1
    taskid: ccb58b2a-52f1-48a8-8aaa-6b591a5bad47
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 910,\n    \"y\": 4220\n  }\n}"
  '68':
    id: '68'
    nexttasks:
      '#none#':
      - '3'
    note: false
    scriptarguments:
      all: {}
      key:
        simple: AWS.EC2.Images
    separatecontext: false
    task:
      brand: ''
      id: 57ac74a5-4136-48f0-8b0b-2db68beacceb
      iscommand: false
      name: Delete context images
      scriptName: DeleteContext
      type: regular
      version: -1
    taskid: 57ac74a5-4136-48f0-8b0b-2db68beacceb
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 910,\n    \"y\": 3520\n  }\n}"
  '69':
    id: '69'
    nexttasks:
      '#none#':
      - '18'
    note: false
    scriptarguments:
      description:
        simple: Demisto-PlaybookTest2
      groupName:
        simple: Demisto-PlaybookTest2
      region: {}
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
      vpcId:
        simple: vpc-7bfc8e10
    separatecontext: false
    task:
      brand: AWS - EC2
      description: Creates a security group.
      id: 11405132-3995-4531-85f7-8d266a96195c
      iscommand: true
      name: aws-ec2-create-security-group
      script: AWS - EC2|||aws-ec2-create-security-group
      type: regular
      version: -1
    taskid: 11405132-3995-4531-85f7-8d266a96195c
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 910,\n    \"y\": 1420\n  }\n}"
  '7':
    id: '7'
    nexttasks:
      '#none#':
      - '48'
      - '49'
      - '50'
    note: false
    scriptarguments:
      iops: {}
      region: {}
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
      size:
        simple: '60'
      volumeId:
        simple: ${AWS.EC2.Instances.BlockDeviceMappings.Ebs.VolumeId}
      volumeType: {}
    separatecontext: false
    task:
      brand: AWS - EC2
      description: You can modify several parameters of an existing EBS volume, including
        volume size, volume type, and IOPS capacity.
      id: e6b1a266-9ee0-4220-8b46-3f76ec91afa2
      iscommand: true
      name: aws-ec2-modify-volume
      script: AWS - EC2|||aws-ec2-modify-volume
      type: regular
      version: -1
    taskid: e6b1a266-9ee0-4220-8b46-3f76ec91afa2
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 910,\n    \"y\": 4570\n  }\n}"
  '70':
    id: '70'
    nexttasks:
      '#none#':
      - '71'
    note: false
    scriptarguments:
      disableApiTermination: {}
      ebsOptimized: {}
      enaSupport: {}
      groups: {}
      instanceId:
        simple: ${AWS.EC2.Instances.InstanceId}
      instanceInitiatedShutdownBehavior: {}
      instanceType: {}
      sourceDestCheck: {}
    separatecontext: false
    task:
      brand: AWS - EC2_copy
      description: Modifies the specified attribute of the specified instance. You
        can specify only one attribute at a time. Using this action to change the
        security groups associated with an elastic network interface (ENI) attached
        to an instance in a VPC can result in an error if the instance has more than
        one ENI. To change the security groups associated with an ENI attached to
        an instance that has multiple ENIs, we recommend that you use the ModifyNetworkInterfaceAttribute
        action.
      id: a21775a9-b8d2-4e48-866c-f3b811c83d8a
      iscommand: true
      name: aws-ec2-modify-instance-attribute
      script: AWS - EC2_copy|||aws-ec2-modify-instance-attribute
      type: regular
      version: -1
    taskid: a21775a9-b8d2-4e48-866c-f3b811c83d8a
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 910,\n    \"y\": 2120\n  }\n}"
  '71':
    id: '71'
    nexttasks:
      '#none#':
      - '65'
    note: false
    scriptarguments:
      attachmentId: {}
      deleteOnTermination: {}
      description: {}
      groups: {}
      networkInterfaceId:
        simple: ${AWS.EC2.Instances.NetworkInterfaces.NetworkInterfaceId}
      sourceDestCheck: {}
    separatecontext: false
    task:
      brand: AWS - EC2_copy
      description: Modifies the specified network interface attribute. You can specify
        only one attribute at a time.
      id: 33f2ce33-747f-421b-8f22-224c5732f9d2
      iscommand: true
      name: aws-ec2-modify-network-interface-attribute
      script: AWS - EC2_copy|||aws-ec2-modify-network-interface-attribute
      type: regular
      version: -1
    taskid: 33f2ce33-747f-421b-8f22-224c5732f9d2
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 910,\n    \"y\": 2295\n  }\n}"
  '8':
    id: '8'
    nexttasks:
      '#none#':
      - '2'
    note: false
    scriptarguments:
      region: {}
      resources:
        simple: ${AWS.EC2.Instances.InstanceId}
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
      tags:
        simple: key=Usage,value=Test
    separatecontext: false
    task:
      brand: AWS - EC2
      description: Adds or overwrites one or more tags for the specified Amazon EC2
        resource or resources.
      id: 69414416-c3ce-4fa7-8243-381e9814e8b5
      iscommand: true
      name: aws-ec2-create-tags
      script: AWS - EC2|||aws-ec2-create-tags
      type: regular
      version: -1
    taskid: 69414416-c3ce-4fa7-8243-381e9814e8b5
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 910,\n    \"y\": 2995\n  }\n}"
  '9':
    id: '9'
    nexttasks:
      '#none#':
      - '10'
    note: false
    scriptarguments:
      associationId:
        simple: ${AWS.EC2.ElasticIPs.AssociationId}
      region: {}
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
    separatecontext: false
    task:
      brand: AWS - EC2
      description: Disassociates an Elastic IP address from the instance or network
        interface its associated with.
      id: 1f24c3b0-8b3f-40f0-82e7-87df29133f63
      iscommand: true
      name: aws-ec2-disassociate-address
      script: AWS - EC2|||aws-ec2-disassociate-address
      type: regular
      version: -1
    taskid: 1f24c3b0-8b3f-40f0-82e7-87df29133f63
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 910,\n    \"y\": 7195\n  }\n}"
toversion: 4.1.9
version: -1
view: "{\n  \"linkLabelsPosition\": {},\n  \"paper\": {\n    \"dimensions\": {\n \
  \     \"height\": 8815,\n      \"width\": 2100,\n      \"x\": 50,\n      \"y\":\
  \ 50\n    }\n  }\n}"
