id: TestAwsEC2GetPublicSGRules-Test
inputs: []
name: AwsEC2GetPublicSGRules-Test
outputs: []
starttaskid: '0'
tasks:
  '0':
    id: '0'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '3'
    note: false
    separatecontext: false
    task:
      brand: ''
      id: ff1ca85b-aeb0-42a5-8c0e-561f52ac2ff4
      iscommand: false
      name: ''
      version: -1
    taskid: ff1ca85b-aeb0-42a5-8c0e-561f52ac2ff4
    timertriggers: []
    type: start
    view: "{\n  \"position\": {\n    \"x\": 50,\n    \"y\": 50\n  }\n}"
  '1':
    id: '1'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '2'
    note: false
    scriptarguments:
      append: {}
      key:
        simple: ipPermissions
      value:
        simple: "[{\"IpProtocol\": \"-1\", \"IpRanges\": [], \"Ipv6Ranges\": [{\"\
          CidrIpv6\": \"::/0\"}], \"PrefixListIds\": [],\n           \"UserIdGroupPairs\"\
          : []}, {\"FromPort\": 10, \"IpProtocol\": \"tcp\", \"IpRanges\": [{\"CidrIp\"\
          : \"0.0.0.0/0\"}],\n                                     \"Ipv6Ranges\"\
          : [{\"CidrIpv6\": \"::/0\"}], \"PrefixListIds\": [], \"ToPort\": 22,\n \
          \                                    \"UserIdGroupPairs\": []},\n      \
          \    {\"FromPort\": 22, \"IpProtocol\": \"tcp\", \"IpRanges\": [{\"CidrIp\"\
          : \"0.0.0.0/0\"}],\n           \"Ipv6Ranges\": [{\"CidrIpv6\": \"::/0\"\
          }], \"PrefixListIds\": [], \"ToPort\": 23, \"UserIdGroupPairs\": []},\n\
          \          {\"FromPort\": 55, \"IpProtocol\": \"tcp\", \"IpRanges\": [],\
          \ \"Ipv6Ranges\": [{\"CidrIpv6\": \"::/0\"}],\n           \"PrefixListIds\"\
          : [], \"ToPort\": 55, \"UserIdGroupPairs\": []}]"
    separatecontext: false
    task:
      brand: ''
      description: Sets a value in Context with the given Context key.
      id: 8d3c4f9c-0f5a-4fb2-835a-9926af5a51c6
      iscommand: false
      name: Set
      scriptName: Set
      type: regular
      version: -1
    taskid: 8d3c4f9c-0f5a-4fb2-835a-9926af5a51c6
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 50,\n    \"y\": 370\n  }\n}"
  '2':
    id: '2'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '4'
    note: false
    scriptarguments:
      fromPort:
        simple: '22'
      groupId:
        simple: sg-12345
      includeIPv6: {}
      ipPermissions:
        simple: ${ipPermissions}
      protocol:
        simple: tcp
      region:
        simple: us-west-2
      toPort:
        simple: '22'
    separatecontext: false
    task:
      brand: ''
      description: Find Security Group rules which allow ::/0 (IPv4) or 0.0.0.0/0.
      id: 8be9f13f-6791-4bec-8700-5b8686674c40
      iscommand: false
      name: AwsEC2GetPublicSGRules
      scriptName: AwsEC2GetPublicSGRules
      type: regular
      version: -1
    taskid: 8be9f13f-6791-4bec-8700-5b8686674c40
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 50,\n    \"y\": 545\n  }\n}"
  '3':
    id: '3'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '1'
    note: false
    scriptarguments:
      all:
        simple: 'yes'
      index: {}
      key: {}
      keysToKeep: {}
      subplaybook: {}
    separatecontext: false
    task:
      brand: ''
      description: Delete field from context
      id: f6308096-df58-45d5-853f-54793bc7248f
      iscommand: false
      name: Delete Context
      scriptName: DeleteContext
      type: regular
      version: -1
    taskid: f6308096-df58-45d5-853f-54793bc7248f
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 50,\n    \"y\": 195\n  }\n}"
  '4':
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              simple: AWS.EC2.SecurityGroup.PublicRules
          operator: hasLength
          right:
            value:
              simple: '2'
      - - left:
            iscontext: true
            value:
              simple: AWS.EC2.SecurityGroup.PublicRules.fromPort
          operator: containsGeneral
          right:
            value:
              simple: '10'
      - - left:
            iscontext: true
            value:
              simple: AWS.EC2.SecurityGroup.PublicRules.fromPort
          operator: containsGeneral
          right:
            value:
              simple: '22'
      - - left:
            iscontext: true
            value:
              complex:
                accessor: EC2.SecurityGroup.PublicRules.fromPort
                root: AWS
          operator: notContainsGeneral
          right:
            value:
              simple: '55'
      label: 'yes'
    id: '4'
    ignoreworker: false
    nexttasks:
      'yes':
      - '6'
    note: false
    separatecontext: false
    task:
      brand: ''
      id: a9bb9d31-dbd4-416e-802f-b587d9264de9
      iscommand: false
      name: Check Result
      type: condition
      version: -1
    taskid: a9bb9d31-dbd4-416e-802f-b587d9264de9
    timertriggers: []
    type: condition
    view: "{\n  \"position\": {\n    \"x\": 50,\n    \"y\": 720\n  }\n}"
  '5':
    id: '5'
    ignoreworker: false
    note: false
    separatecontext: false
    task:
      brand: ''
      id: 1f425a5e-20f1-4c00-80c8-b8619204cf7c
      iscommand: false
      name: Test Completed
      type: title
      version: -1
    taskid: 1f425a5e-20f1-4c00-80c8-b8619204cf7c
    timertriggers: []
    type: title
    view: "{\n  \"position\": {\n    \"x\": 50,\n    \"y\": 1420\n  }\n}"
  '6':
    id: '6'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '7'
    note: false
    scriptarguments:
      all: {}
      index: {}
      key:
        simple: AWS
      keysToKeep: {}
      subplaybook: {}
    separatecontext: false
    task:
      brand: ''
      description: Delete field from context
      id: 0fe0e0fa-a895-4a68-84bb-d7afd4944736
      iscommand: false
      name: Delete Context
      scriptName: DeleteContext
      type: regular
      version: -1
    taskid: 0fe0e0fa-a895-4a68-84bb-d7afd4944736
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 50,\n    \"y\": 895\n  }\n}"
  '7':
    id: '7'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '8'
    note: false
    scriptarguments:
      fromPort:
        simple: '55'
      groupId:
        simple: sg-12345
      includeIPv6:
        simple: 'yes'
      ipPermissions:
        simple: ${ipPermissions}
      protocol:
        simple: udp
      region: {}
      toPort:
        simple: '60'
    separatecontext: false
    task:
      brand: ''
      description: Find Security Group rules which allow ::/0 (IPv4) or 0.0.0.0/0.
      id: 9005e094-4c9d-4299-8e55-4a70ae5c6a65
      iscommand: false
      name: AwsEC2GetPublicSGRules
      scriptName: AwsEC2GetPublicSGRules
      type: regular
      version: -1
    taskid: 9005e094-4c9d-4299-8e55-4a70ae5c6a65
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 50,\n    \"y\": 1070\n  }\n}"
  '8':
    conditions:
    - condition:
      - - left:
            iscontext: true
            value:
              simple: AWS.EC2.SecurityGroup.PublicRules
          operator: hasLength
          right:
            value:
              simple: '1'
      - - left:
            iscontext: true
            value:
              simple: AWS.EC2.SecurityGroup.PublicRules.ipProtocol
          operator: containsGeneral
          right:
            value:
              simple: '-1'
      - - left:
            iscontext: true
            value:
              simple: AWS.EC2.SecurityGroup.PublicRules.fromPort
          operator: isNotExists
      label: 'yes'
    id: '8'
    ignoreworker: false
    nexttasks:
      'yes':
      - '5'
    note: false
    separatecontext: false
    task:
      brand: ''
      id: 134d7ac9-9a89-4324-88b1-7c3105fed802
      iscommand: false
      name: Check Result
      type: condition
      version: -1
    taskid: 134d7ac9-9a89-4324-88b1-7c3105fed802
    timertriggers: []
    type: condition
    view: "{\n  \"position\": {\n    \"x\": 50,\n    \"y\": 1245\n  }\n}"
toversion: 4.1.9
version: -1
view: "{\n  \"linkLabelsPosition\": {},\n  \"paper\": {\n    \"dimensions\": {\n \
  \     \"height\": 1435,\n      \"width\": 380,\n      \"x\": 50,\n      \"y\": 50\n\
  \    }\n  }\n}"
