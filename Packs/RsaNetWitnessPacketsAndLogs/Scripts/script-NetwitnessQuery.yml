args:
- description: <uint64, optional> The starting meta id (to run the query from most
    recent to oldest meta, make id1 larger than id2)
  name: id1
- description: <uint64, optional> The ending meta id
  name: id2
- description: <uint32, optional> The max number of entries to return, or just stream
    back all results if zero
  name: size
- description: <string, optional> The query string to use
  name: query
- description: <string, optional> The flags to use for query.  Can be a number (bitwise
    mask) or comma separated values like query-log.
  name: flags
- description: <uint64, optional> Query optimization to stop processing results after
    the threshold is reached (useful with select aggregate functions).  Zero means
    no threshold (the default).
  name: threshold
comment: Performs a query against the meta database
commonfields:
  id: NetwitnessQuery
  version: -1
dependson:
  must:
  - nw-sdk-query
name: NetwitnessQuery
script: "\nresp = demisto.executeCommand(\"nw-sdk-query\", demisto.args())\n\nif isError(resp[0]):\n\
  \    demisto.results(resp)\nelse:\n    data = demisto.get(resp[0], \"Contents.results.fields\"\
  )\n    if data:\n        data = data if isinstance(data, list) else [data]\n   \
  \     data = [{k: formatCell(row[k]) for k in row} for row in data]\n        demisto.results({\"\
  ContentsFormat\": formats[\"table\"], \"Type\": entryTypes[\"note\"], \"Contents\"\
  : data} )\n    else:\n        demisto.results(\"No results.\")\n"
scripttarget: 0
subtype: python2
system: true
tags:
- RSA NetWitness Packets & Logs
timeout: 0s
toversion: 4.1.9
type: python
