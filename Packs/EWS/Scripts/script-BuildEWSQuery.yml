args:
- default: true
  description: The value of the email's "From" attribute.
  name: from
- description: The value of the email's "Subject" attribute.
  name: subject
- description: The value of the email's "attachmentName" attribute.
  name: attachmentName
- description: The value of the email's "Body" attribute.
  name: body
- auto: PREDEFINED
  defaultValue: 'true'
  description: Limit the search to the current week (true/false).
  name: searchThisWeek
  predefined:
  - 'true'
  - 'false'
- auto: PREDEFINED
  defaultValue: 'true'
  description: Removes the prefix from the subject of reply and forward messages (e.g.,
    FW:).
  name: stripSubject
  predefined:
  - 'true'
  - 'false'
comment: Returns an EWS query according to the automation's arguments.
commonfields:
  id: BuildEWSQuery
  version: -1
name: BuildEWSQuery
outputs:
- contextPath: EWS.Query
  description: The result query
  type: string
runonce: false
script: "import re\nimport sys\nreload(sys)\nsys.setdefaultencoding(\"utf-8\")\n\n\
  # Regex for removing forward/replay prefixes\np = re.compile('([\\[\\(] *)?(RE|FWD?)\
  \ *([-:;)\\]][ :;\\])-]*|$)|\\]+ *$', re.IGNORECASE)\n\nargs = {}\n\nif demisto.args().get(\"\
  from\"):\n    args[\"From\"] = demisto.args().get(\"from\")\nif demisto.args().get(\"\
  subject\"):\n    args[\"Subject\"] = demisto.args().get(\"subject\")\nif demisto.args().get(\"\
  attachmentName\"):\n    args[\"Attachment\"] = demisto.args().get(\"attachmentName\"\
  )\nif demisto.args().get(\"body\"):\n    args[\"Body\"] = demisto.args().get(\"\
  body\")\n\nstripSubject = True if demisto.args().get(\"stripSubject\").lower() ==\
  \ \"true\" else False\nif stripSubject and args.get(\"Subject\"):\n    # Recursively\
  \ remove the regex matches only from the beginning of the string\n    match_string\
  \ = args[\"Subject\"]\n    location_match = p.match(match_string)\n    location\
  \ = location_match.start() if location_match else -1\n\n    while(location==0 and\
  \ match_string):\n        match_string = p.sub(\"\",match_string,1)\n        location_match\
  \ = p.match(match_string)\n        location = location_match.start() if location_match\
  \ else -1\n\n    args[\"Subject\"] = match_string\n\nquery = \" AND \".join('{0}:\"\
  {1}\"'.format(key,value) for (key,value) in args.items())\n\nsearch_last_week =\
  \ True if demisto.args().get(\"searchThisWeek\").lower() == \"true\" else False\n\
  if search_last_week:\n    query = query + ' AND Received:\"this week\"'\n\ndemisto.results({\n\
  \    'ContentsFormat': formats[\"json\"],\n    'Type': entryTypes[\"note\"],\n \
  \   'Contents':  {\"EWS\":{\"Query\": query or ' '}},\n    \"HumanReadable\": query\
  \ or ' ',\n    \"EntryContext\": {\"EWS\":{\"Query\": query or ' '}}\n});"
scripttarget: 0
subtype: python2
system: true
tags:
- ews
tests:
- buildewsquery_test
toversion: 4.1.9
type: python
