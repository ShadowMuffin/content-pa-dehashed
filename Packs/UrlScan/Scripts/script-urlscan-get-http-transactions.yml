args:
- description: The URL to search the transaction list for.
  name: url
  required: true
- defaultValue: '5'
  description: The wait time between two polling actions(In Seconds) of UrlScan results
    page, please note that you may encounter rate-limit error if the time set is too
    low.
  name: wait_time_for_polling
- defaultValue: '60'
  description: How many seconds to wait for the scan id result
  name: timeout
- defaultValue: '20'
  description: Limits the results in the war room(Maximum limit allowed is 100)
  name: limit
comment: "This script enables gives you the functionality of getting the http transactions\
  \ made for a given URL using the UrlScan integration. \nThe proper use of this script,\
  \ this while using it inside a playbook, is by going to the 'Advanced' section in\
  \ the task that executes this script, and making sure to check the checkbox of 'Run\
  \ without a worker' - this will cause the system to use much less resources in the\
  \ polling action."
commonfields:
  id: UrlscanGetHttpTransactions
  version: -1
dependson:
  must:
  - urlscan.io|||urlscan-get-http-transaction-list
  - urlscan.io|||urlscan-submit-url-command
  - urlscan.io|||urlscan-poll-uri
enabled: true
name: UrlscanGetHttpTransactions
runas: DBotWeakRole
runonce: false
script: "var url = args.url;\nvar limit = args.limitl;\nvar defaultWaitTime = Number(args.wait_time_for_polling)\n\
  \nuuid = executeCommand('urlscan-submit-url-command', {'url': url})[0].Contents;\n\
  uri = executeCommand('urlscan-get-result-page', {'uuid': uuid})[0].Contents;\n\n\
  var resStatusCode = 404\nvar waitedTime = 0\nwhile(resStatusCode == 404 && waitedTime\
  \ < Number(args.timeout)) {\n    var resStatusCode = executeCommand('urlscan-poll-uri',\
  \ {'uri': uri})[0].Contents;\n\n    if (resStatusCode == 200) {\n        break;\n\
  \    }\n    wait(defaultWaitTime);\n    waitedTime = waitedTime + defaultWaitTime;\n\
  }\nif(resStatusCode == 200) {\n    return executeCommand('urlscan-get-http-transaction-list',\
  \ {'uuid': uuid, 'url': url, 'limit': limit});\n} else {\n    if(waitedTime >= Number(args.timeout)){\n\
  \        return 'Could not get result from UrlScan, please try to increase the timeout.'\n\
  \    } else {\n        return 'Could not get result from UrlScan, possible rate-limit\
  \ issues.'\n    }\n}"
scripttarget: 0
tags:
- polling
- UrlScan
toversion: 4.1.9
type: javascript
