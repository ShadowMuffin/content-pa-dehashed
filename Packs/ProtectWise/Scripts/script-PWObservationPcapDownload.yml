args:
- default: true
  description: The observation ID (or a comma-separated list of IDs)
  name: id
  required: true
- description: the sensor id (or a comma-separated list of IDs)
  name: sensorId
  required: true
- description: Optionally provide a filename for the download
  name: filename
- description: Download <burstsize> files every time, and wait <waitms> milliseconds
    each time. Defaults are 10 files and 1 second.
  name: burstsize
- description: Download <burstsize> files every time, and wait <waitms> milliseconds
    each time. Defaults are 10 files and 1 second.
  name: waitms
comment: Download PCAPs related to the specified observations. Supports rate throttling.
commonfields:
  id: PWObservationPcapDownload
  version: -1
dependson:
  must:
  - ProtectWise|||observation-pcap-download
name: PWObservationPcapDownload
script: "from time import sleep\nres = []\ndArgs = demisto.args()\nburstSize = demisto.get(dArgs,\
  \ 'burstsize')\nburstSize = int(burstSize) if burstSize else 10\nremaining = burstSize\n\
  waitSeconds = demisto.get(dArgs, 'waitms')\nwaitSeconds = float(waitSeconds) / 1000.0\
  \ if waitSeconds else 1.0\ndArgs[\"using-brand\"] = \"ProtectWise\"\nobIDs = argToList(demisto.get(dArgs,\
  \ 'id'))\nsensorIDs = demisto.get(dArgs, 'sensorId')\nsensorList = [sensorIDs] if\
  \ isinstance(sensorIDs, int) else argToList(sensorIDs)\nfor sensorId in sensorList:\n\
  \    dArgs['sensorId'] = sensorId\n    for oid in obIDs:\n        dArgs['id'] =\
  \ oid\n        dArgs['filename'] = oid + '.pcap'\n        if remaining:\n      \
  \      remaining -= 1\n        else:\n            sleep(waitSeconds)\n         \
  \   remaining = burstSize\n        resCmd = demisto.executeCommand(\"observation-pcap-download\"\
  , dArgs)\n        try:\n            res += resCmd\n        except Exception as ex:\n\
  \            res.append({\"Type\": entryTypes[\"error\"], \"ContentsFormat\": formats[\"\
  text\"],\n                        \"Contents\": \"Error occurred while parsing output\
  \ from command. Exception info:\\n\" + str(ex) + \"\\n\\nInvalid output:\\n\" +\
  \ str(resCmd)})\ndemisto.results(res)\n"
scripttarget: 0
subtype: python2
system: true
tags:
- protectwise
tests:
- Protectwise-Test
timeout: "3.6\xB5s"
toversion: 4.1.9
type: python
