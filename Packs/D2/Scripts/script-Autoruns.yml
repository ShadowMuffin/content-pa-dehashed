args:
- default: true
  description: Name of the system from which to collect data
  name: system
  required: true
comment: 'Collect Autoruns items from an endpoint and hashes for each item.

  Uses a d2 agent to run SysInternals Autoruns.'
commonfields:
  id: Autoruns
  version: -1
dependson: {}
name: Autoruns
script: "respAR = demisto.executeCommand( 'D2Autoruns', { 'using' : demisto.args()['system']\
  \ } )\nif isError(respAR[0]):\n    demisto.results(respAR)\nelse:\n    hashes =\
  \ []\n    try:\n        try:\n            lines = respAR[0]['Contents'][2:].decode('utf-16').encode('ascii').split('\\\
  r\\n')\n        except Exception as ex:\n            lines = respAR[0]['Contents'].split('\\\
  r\\n')\n        headers = lines[5].replace('\\t','|')\n        try:\n          \
  \  hashCol = headers.split('|').index('MD5')\n        except ValueError as ve:\n\
  \            hashCol = -1\n        mdTable = headers + '\\n'\n        mdTable +=\
  \ '|'.join( '---'*len(headers.split('|')) ) + '\\n'\n        for l in lines[6:]:\n\
  \            if hashCol > -1:\n                cells = l.split('\\t')\n        \
  \        if hashCol < len(cells) and cells[hashCol].strip():\n                 \
  \   hashes.append(cells[hashCol])\n            mdTable += l.replace('\\t','|') +'\\\
  n'\n        if hashes:\n            appendContext('md5s', ', '.join(hashes), dedup\
  \ = True)\n        demisto.results( { 'Type' : entryTypes['note'], 'ContentsFormat'\
  \ : formats['markdown'], 'Contents': mdTable} )\n    except Exception as ex:\n \
  \       demisto.results( { 'Type' : entryTypes['error'], 'ContentsFormat' : formats['text'],\
  \ 'Contents': \"Error occurred while parsing output from D2Autoruns:\\n\" + str(ex)\
  \ + '\\n\\nAutoruns output:\\n' + respAR[0]['Contents'] })"
scripttarget: 0
subtype: python2
system: true
tags:
- endpoint
- forensics
timeout: 0s
toversion: 4.1.9
type: python
