args:
- default: true
  description: Name of the system to be queried
  name: system
  required: true
comment: 'Perform a short probe of the specified system''s registry - retrieve and
  display the values of a list of interesting keys '
commonfields:
  id: RegProbeBasic
  version: -1
dependson: {}
name: RegProbeBasic
script: "keys = [ r\"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\\
  Run\",\nr\"HKEY_LOCAL_MACHINE\\SOFTWARE\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\\
  Run\",\nr\"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\"\
  ,\nr\"HKEY_LOCAL_MACHINE\\SOFTWARE\\Wow6432Node\\Microsoft\\Active Setup\\Installed\
  \ Components\",\nr\"HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\\
  Run\",\nr\"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\"\
  \ ]\ndef Reg2Markdown(baseKey,regResp):\n    res, mdRows  = [], ''\n    if isError(regResp[0]):\n\
  \        res += regResp\n    elif len(regResp) > 1 :\n        res.append( { 'Type'\
  \ : entryTypes['error'], 'ContentsFormat' : formats['text'], 'Contents' : 'Unexpected\
  \ output from D2RegQuery - more than one entry returned:\\n'+'\\n'.join( [ str(x)\
  \ for x in regResp ] ) } )\n    else:\n        subkeys = regResp[0]['Contents']\n\
  \        for sk in subkeys:\n            if type(subkeys[sk]) == dict:\n       \
  \         for ssk in subkeys[sk]:\n                    mdRows += '\\n|' + str(baseKey)\
  \ + '\\\\' + str(sk) + '|' + str(ssk) + '|' + str( subkeys[sk][ssk] ) + '|'\n  \
  \          else:\n                mdRows += '\\n|' + str(baseKey) + '|' + str(sk)\
  \ + '|' + str( subkeys[sk] ) + '|'\n    return ( res, mdRows )\nres = []\nif 'system'\
  \ in demisto.args():\n    system = demisto.args()['system']\nelif 'using' in demisto.args():\n\
  \    system = demisto.args()['using']\nelse:\n    demisto.results( { 'Type' : entryTypes['error'],\
  \ 'ContentsFormat' : formats['text'], 'Contents' : 'You must provide \"system\"\
  \ or \"using\" as arguments.'} )\n    sys.exit(0)\nmdTable = '### Results for short\
  \ registry probe of system *' + system + '*'\nmdTable += '\\n|Key|SubKey|Value|'\n\
  mdTable += '\\n|-----|------|-----|'\nfor k in keys:\n    regPath = NormalizeRegistryPath(\
  \ k )\n    cmdResp = demisto.executeCommand( 'D2RegQuery', { 'using' : system, 'regpath'\
  \ : regPath } )\n    moreEntries , moreRows = Reg2Markdown( regPath, cmdResp )\n\
  \    mdTable += moreRows\n    res += moreEntries\nres.append ( { 'Type' : entryTypes['note'],\
  \ 'ContentsFormat' : formats['markdown'], 'Contents' : mdTable } )\ndemisto.results(res)"
scripttarget: 0
subtype: python2
system: true
tags:
- registry
timeout: 0s
toversion: 4.1.9
type: python
