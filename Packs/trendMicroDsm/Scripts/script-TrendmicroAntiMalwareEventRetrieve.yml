args:
- default: true
  description: Time interval start
  name: rangeFrom
- description: Time interval end
  name: rangeTo
- description: Specific Time
  name: specificTime
- auto: PREDEFINED
  description: Define time filter mode. mandatory if filtering by time.
  name: timeFilterType
  predefined:
  - LAST_HOUR
  - LAST_24_HOURS
  - LAST_7_DAYS
  - CUSTOM_RANGE
  - SPECIFIC_TIME
- description: Filter by host group ID
  name: hostGroupID
- description: Filter by host ID
  name: hostID
- description: Filter by host security profile ID
  name: securityProfileID
- auto: PREDEFINED
  description: Define host filter mode. mandatory if filtering by host/s.
  name: hostFilterType
  predefined:
  - ALL_HOSTS
  - HOSTS_IN_GROUP
  - HOSTS_USING_SECURITY_PROFILE
  - HOSTS_IN_GROUP_AND_ALL_SUBGROUPS
  - SPECIFIC_HOST
  - MY_HOSTS
- description: filter by event ID
  name: eventID
- auto: PREDEFINED
  description: event ID operator
  name: eventFilterOperator
  predefined:
  - GREATER_THAN
  - LESS_THAN
  - EQUAL
comment: Get anti malware events
commonfields:
  id: TrendmicroAntiMalwareEventRetrieve
  version: -1
dependson:
  must:
  - trendmicro-anti-malware-event-retrieve
name: TrendmicroAntiMalwareEventRetrieve
script: "hostIds = argToList(demisto.get(demisto.args(),\"hostID\"))\nresps = []\n\
  dArgs = demisto.args()\nerr = []\nres = []\n\nif hostIds:\n    for hostId in hostIds:\n\
  \        dArgs[\"hostID\"] = hostId\n        temp_resp = demisto.executeCommand(\"\
  trendmicro-anti-malware-event-retrieve\", dArgs)\n        if isError(temp_resp[0]):\n\
  \            err += temp_resp\n        else:\n            resps += temp_resp\nelse:\n\
  \    resps = demisto.executeCommand(\"trendmicro-anti-malware-event-retrieve\",\
  \ dArgs)\nfor resp in resps:\n    data = demisto.get(resp, \"Contents.antiMalwareEventRetrieveReturn.antiMalwareEvents.item\"\
  )\n    if data:\n        data = data if isinstance(data, list) else [data]\n   \
  \     data = [{k: formatCell(row[k]) for k in row} for row in data]\n        res\
  \ += [{\"ContentsFormat\": formats[\"table\"], \"Type\": entryTypes[\"note\"], \"\
  Contents\": data}]\n\n    res += err\nif res:\n    demisto.results(res)\nelse:\n\
  \    demisto.results(\"No results.\")\n"
scripttarget: 0
subtype: python2
system: true
tags:
- Trend Micro
timeout: 0s
toversion: 4.1.9
type: python
