id: playbook-checkEmailAuthenticity-test
inputs: []
name: playbook-checkEmailAuthenticity-test
outputs: []
starttaskid: '0'
tasks:
  '0':
    id: '0'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '1'
    note: false
    separatecontext: false
    task:
      brand: ''
      id: 8f3af618-18e3-454d-836f-2179ca55aed0
      iscommand: false
      name: ''
      version: -1
    taskid: 8f3af618-18e3-454d-836f-2179ca55aed0
    timertriggers: []
    type: start
    view: "{\n  \"position\": {\n    \"x\": 50,\n    \"y\": 50\n  }\n}"
  '1':
    id: '1'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '2'
    note: false
    scriptarguments:
      body: {}
      filename: {}
      headers: {}
      insecure: {}
      method:
        simple: GET
      password: {}
      proxy: {}
      saveAsFile:
        simple: 'yes'
      unsecure: {}
      url:
        simple: https://raw.githubusercontent.com/demisto/content/master/TestData/CheckEmailAuthenticity_test_mail.eml
      username: {}
    separatecontext: false
    task:
      brand: ''
      description: Sends http request. Returns the response as json.
      id: b58b4b73-e328-4e88-8f1e-58201c9f6aec
      iscommand: false
      name: Bring email from server
      scriptName: http
      type: regular
      version: -1
    taskid: b58b4b73-e328-4e88-8f1e-58201c9f6aec
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 50,\n    \"y\": 195\n  }\n}"
  '2':
    id: '2'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '3'
    note: false
    results:
    - AttachmentName
    scriptarguments:
      entryid:
        simple: ${File.EntryID}
      max_depth: {}
      parse_only_headers: {}
    separatecontext: false
    task:
      brand: ''
      description: Parse an email from an eml or msg file and populate all relevant
        context data to investigate the email. Also extracts inner attachments and
        returns them to the war room. The incident labels themselves are preserved
        and not modified - only the "Label/x" context items that originated from the
        labels, and the best practice is to rely on these for the remainder of the
        playbook.
      id: 010d86e9-a3e6-45ae-8762-e7847d7f29d8
      iscommand: false
      name: Parse Email
      scriptName: ParseEmailFiles
      type: regular
      version: -1
    taskid: 010d86e9-a3e6-45ae-8762-e7847d7f29d8
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 50,\n    \"y\": 370\n  }\n}"
  '3':
    id: '3'
    ignoreworker: false
    note: false
    scriptarguments:
      DKIM_override_fail: {}
      DKIM_override_neutral: {}
      DKIM_override_none: {}
      DKIM_override_pass: {}
      DKIM_override_permerror: {}
      DKIM_override_policy: {}
      DKIM_override_temperror: {}
      DMARC_override_fail: {}
      DMARC_override_none: {}
      DMARC_override_pass: {}
      DMARC_override_permerror: {}
      DMARC_override_temperror: {}
      SPF_override_fail: {}
      SPF_override_neutral: {}
      SPF_override_none: {}
      SPF_override_pass: {}
      SPF_override_permerror: {}
      SPF_override_softfail: {}
      SPF_override_temperror: {}
      headers:
        simple: ${Email.Headers}
    separatecontext: false
    task:
      brand: ''
      description: Checks Email authenticity based on its SPF, DMARC and DKIM
      id: 651f04dc-657a-45c9-8580-5bb531564f58
      iscommand: false
      name: Check Authenticity
      scriptName: CheckEmailAuthenticity
      type: regular
      version: -1
    taskid: 651f04dc-657a-45c9-8580-5bb531564f58
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 50,\n    \"y\": 545\n  }\n}"
toversion: 4.1.9
version: -1
view: "{\n  \"linkLabelsPosition\": {},\n  \"paper\": {\n    \"dimensions\": {\n \
  \     \"height\": 590,\n      \"width\": 380,\n      \"x\": 50,\n      \"y\": 50\n\
  \    }\n  }\n}"
