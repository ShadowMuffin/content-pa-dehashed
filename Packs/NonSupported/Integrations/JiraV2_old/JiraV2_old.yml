category: Case Management
commonfields:
  id: jira-v2
  version: -1
configuration:
- defaultvalue: ''
  display: ' Jira URL, for example: https://demisto.atlassian.net/ '
  name: url
  required: true
  type: 0
- defaultvalue: ''
  display: Username
  name: username
  required: false
  type: 0
- defaultvalue: ''
  display: Password
  name: password
  required: false
  type: 4
- defaultvalue: OauthKey
  display: ConsumerKey
  name: consumerKey
  required: false
  type: 0
- defaultvalue: ''
  display: AccessToken
  name: accessToken
  required: false
  type: 0
- defaultvalue: ''
  display: PrivateKey
  name: privateKey
  required: false
  type: 14
- defaultvalue: status!=done
  display: Query (in JQL) for fetching incidents
  name: query
  required: false
  type: 0
- defaultvalue: ''
  display: Issue index to start fetching incidents from
  name: idOffset
  required: false
  type: 0
- defaultvalue: ''
  display: Trust any certificate (not secure)
  name: insecure
  required: false
  type: 8
- defaultvalue: 'false'
  display: Use system proxy settings
  name: proxy
  required: false
  type: 8
- display: Fetch incidents
  name: isFetch
  required: false
  type: 8
- display: Incident type
  name: incidentType
  required: false
  type: 13
- defaultvalue: ''
  display: Use created field to fetch incidents
  name: fetchByCreated
  required: false
  type: 8
- defaultvalue: ''
  display: API token
  name: APItoken
  required: false
  type: 4
description: Use the Jira integration to manage issues and create Demisto incidents
  from the projects.
display: Atlassian Jira v2
fromversion: 2.6.0
name: jira-v2
script:
  commands:
  - arguments:
    - default: true
      description: The JQL query string.
      name: query
      required: true
    - description: The index (integer) of the first issue to return (0-based).
      name: startAt
    - description: The maximum number of issues to return (default is 50). The maximum
        allowed value is dictated by the JIRA property 'jira.search.views.default.max'.
        If you specify a value that is higher than this number, your search results
        will be truncated.
      name: maxResults
    - description: The headers to display in human readable format.
      name: headers
    description: Queries Jira issues.
    name: jira-issue-query
    outputs:
    - contextPath: Ticket.Id
      description: The ID of the ticket.
    - contextPath: Ticket.Key
      description: The key of the ticket.
    - contextPath: Ticket.Assignee
      description: The user assigned to the ticket.
    - contextPath: Ticket.Creator
      description: The user who created the ticket.
    - contextPath: Ticket.Summary
      description: The summary of the ticket.
    - contextPath: Ticket.Status
      description: The status of the ticket.
  - arguments:
    - default: true
      description: The ID of the issue.
      name: issueId
      required: true
    - description: Headers to display in human readable format.
      name: headers
    - auto: PREDEFINED
      defaultValue: 'false'
      description: If "true", retrives the issue's attachments.
      name: getAttachments
      predefined:
      - 'true'
      - 'false'
    - auto: PREDEFINED
      defaultValue: 'false'
      description: If "true", expands the issue's links.
      name: expandLinks
      predefined:
      - 'true'
      - 'false'
    description: Fetches an issue from Jira.
    name: jira-get-issue
    outputs:
    - contextPath: Ticket.Id
      description: The ID of the ticket.
    - contextPath: Ticket.Key
      description: The key of ticket.
    - contextPath: Ticket.Assignee
      description: The user assigned to the ticket.
    - contextPath: Ticket.Creator
      description: The user who created the ticket.
    - contextPath: Ticket.Summary
      description: The summary of the ticket.
    - contextPath: Ticket.Status
      description: The status of the ticket.
    - contextPath: File.Size
      description: The size of the file.
    - contextPath: File.SHA256
      description: The SHA256 hash of the file.
    - contextPath: File.Name
      description: The name of the file.
    - contextPath: File.SHA1
      description: The SHA1 hash of the file.
  - arguments:
    - description: The issue object (in JSON format).
      name: issueJson
    - description: The summary of the issue.
      name: summary
      required: true
    - description: The project key with which to associate the issue.
      name: projectKey
    - description: ' Select an issue type by name, for example: "Problem". '
      name: issueTypeName
    - description: Select an issue type by its numeric ID.
      name: issueTypeId
    - description: The project name with which to associate the issue.
      name: projectName
    - description: A description of the issue.
      name: description
    - description: 'A CSV list of labels. '
      name: labels
    - description: ' The priorty name, for example: "High" or "Medium". '
      name: priority
    - description: ' The due date for the issue (in the format: 2018-03-11). '
      name: dueDate
    - description: The name of the assignee.
      name: assignee
    - description: The name of the reporter.
      name: reporter
    - description: The parent issue key (if you create a sub-task).
      name: parentIssueKey
    - description: The parent issue ID (if you create a sub-task).
      name: parentIssueId
    description: Creates a new issue in Jira.
    name: jira-create-issue
    outputs:
    - contextPath: Ticket.Id
      description: The ID of the ticket.
    - contextPath: Ticket.Key
      description: The key of the ticket.
  - arguments:
    - description: The ID of the issue.
      name: issueId
      required: true
    - description: The entry ID to upload.
      name: upload
    description: Uploads a file attachment to an issue.
    name: jira-issue-upload-file
  - arguments:
    - default: true
      description: The ID of the issue.
      name: issueId
      required: true
    - description: The actual comment body.
      name: comment
      required: true
    - description: ' The roles that can view the comment, for example: "Administrators". '
      name: visibility
    description: Adds a new comment to an existing Jira issue.
    name: jira-issue-add-comment
  - arguments:
    - description: If a globalId is provided and a remote issue link exists with that
        globalId, the remote issue link is updated.
      name: globalId
    - description: ' The object relationship to issue, for example: "causes". '
      name: relationship
    - description: The URL link.
      name: url
      required: true
    - description: The title of the link.
      name: title
      required: true
    - description: The summary of the link.
      name: summary
    - description: The ID of the issue.
      name: issueId
      required: true
    - description: The application type of the linked remote application. E.g "com.atlassian.confluence".
      name: applicationType
    - description: The application name of the linked remote application. E.g "My
        Confluence Instance".
      name: applicationName
    description: Creates (or updates) an issue link.
    name: jira-issue-add-link
  - arguments:
    - description: The ID of the issue to edit.
      name: issueId
      required: true
    - description: The issue object (in JSON format).
      name: issueJson
    - description: The summary of the issue.
      name: summary
    - description: The description of the issue.
      name: description
    - description: ' A CSV list of labels. '
      name: labels
    - description: ' A priorty name, for example "High" or "Medium". '
      name: priority
    - description: The due date for the issue (in the format 2018-03-11).
      name: dueDate
    - description: The name of the assignee.
      name: assignee
    - description: The name of the status.
      name: status
    description: Modifies an issue in JIRA.
    name: jira-edit-issue
    outputs:
    - contextPath: Ticket.Id
      description: The ID of the ticket.
    - contextPath: Ticket.Key
      description: The key of the ticket.
    - contextPath: Ticket.Assignee
      description: The sser assigned to the ticket.
    - contextPath: Ticket.Creator
      description: The user who created the ticket.
    - contextPath: Ticket.Summary
      description: The summary of the ticket.
    - contextPath: Ticket.Status
      description: The status of the ticket.
  - arguments:
    - description: The ID of the issue to get comments of.
      name: issueId
      required: true
    description: Returns the comments added to a ticket.
    name: jira-get-comments
    outputs:
    - contextPath: Ticket.Comment.Comment
      description: The text of the comment.
      type: string
    - contextPath: Ticket.Comment.Created
      description: The issue creation date.
      type: string
    - contextPath: Ticket.Comment.User
      description: The user that created the comment.
      type: string
  - arguments:
    - description: The ID or key of the issue.
      name: issueIdOrKey
      required: true
    description: Deletes an issue in Jira.
    name: jira-delete-issue
  - description: Returns the ID offset, for example, the first issue ID.
    name: jira-get-id-offset
    outputs:
    - contextPath: Ticket.idOffSet
      description: The ID offset.
      type: string
  dockerimage: demisto/python3:3.7.2.200
  isfetch: true
  runonce: false
  script: ''
  subtype: python3
  type: python
tests:
- Jira-v2-Test
toversion: 4.1.9
