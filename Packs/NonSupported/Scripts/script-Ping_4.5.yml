args:
- default: true
  defaultValue: ''
  description: Address to ping
  isArray: false
  name: address
  predefined: []
  required: true
  secret: false
comment: Pings an IP or url address, to verify it's up
commonfields:
  id: Ping
  version: -1
enabled: true
name: Ping
outputs:
- contextPath: Ping.ret_code
  description: Ping return code
  type: number
- contextPath: Ping.destination
  description: Ping destination address
  type: string
- contextPath: Ping.max_rtt
  description: Ping max round trip time
  type: number
- contextPath: Ping.avg_rtt
  description: Ping average round trip time
  type: number
- contextPath: Ping.min_rtt
  description: Ping minimum round trip time
  type: number
- contextPath: Ping.destination_ip
  description: Ping destination IP
  type: string
runonce: false
script: "import subprocess\nimport re\ntry:\n  dest = demisto.args()['address']\n\
  \  ping_out = subprocess.check_output(['ping', '-c', '3', '-q', dest], stderr=subprocess.STDOUT)\n\
  \  s = re.search(r\"PING.*\\((.+)\\)\", ping_out)\n  res = {}\n  if s:\n      res['destination_ip']\
  \ = s.group(1)\n  s = re.search(r\"round-trip min/avg/max = (.+)/(.+)/(.+)\\s+ms\"\
  , ping_out)\n  if not s:\n      raise ValueError(\"Couldn't parse ping statistics:\\\
  n\" + ping_out)\n  res['ret_code'] = 0\n  res['destination'] = dest\n  res['min_rtt']\
  \ = s.group(1)\n  res['avg_rtt'] = s.group(2)\n  res['max_rtt'] = s.group(3)\n \
  \ demisto.results({\n      'Type': entryTypes['note'],\n      'Contents': res,\n\
  \      'ContentsFormat': formats['json'],\n      'HumanReadable': tableToMarkdown(\"\
  Ping Results\", res),\n      'ReadableContentsFormat' : formats['markdown'],\n \
  \     'EntryContext': { \"Ping\": res }\n  })\nexcept Exception as e:\n  if isinstance(e,\
  \ subprocess.CalledProcessError):\n      msg = e.output\n  else:\n      msg = str(e)\n\
  \  return_error(msg)"
subtype: python2
system: false
tags:
- Utility
tests:
- Ping Test Playbook
timeout: '0'
toversion: 4.1.9
type: python
