args:
- auto: PREDEFINED
  defaultValue: 'false'
  description: Indicates whether to use one-time entitlement or a persistent one
  name: persistent
  predefined:
  - 'true'
  - 'false'
- description: Tag to add on comment reply entries
  name: replyEntriesTag
- defaultValue: '10'
  description: Indicates how many times to try and create an entitlement in case of
    failure
  name: retries
- description: Which task should we close with the reply. If none then no playbook
    tasks will be closed.
  name: task
- defaultValue: 'yes'
  description: First option for a user reply.
  name: option1
- defaultValue: 'no'
  description: Second option for the user reply.
  name: option2
- description: Object ID of Subject
  name: oid
- description: A comma delimited list of additional options (in case more than 2 options
    are needed)
  name: additionalOptions
- description: Chatter comment text. If not given, a default post message will be
    generated based on option arguments.
  name: text
- description: Add a link to the message
  name: link
comment: Ask a user a question via Salesforce Chatter and process the reply directly
  into the investigation.
commonfields:
  id: SalesforceAskUser
  version: -1
dependson:
  must:
  - salesforce-push-comment
enabled: true
name: SalesforceAskUser
runonce: false
script: "import time\n\nretries = int(demisto.args().get('retries'))\npersistent =\
  \ True if demisto.args().get('persistent') == 'true' else False\nfor i in xrange(retries):\n\
  \    res = demisto.executeCommand('addEntitlement', {'persistent': persistent})\n\
  \    if isError((res[0])):\n        if '[investigations] [investigation] (15)' in\
  \ res[0]['Contents']:\n            time.sleep(1)\n            continue\n       \
  \ return_error(res.Contents)\n    entitlement = res[0]['Contents']\n    break\n\n\
  comment_suffix = ' - #{0} {1}'.format(demisto.incidents()[0]['id'], entitlement)\n\
  task = demisto.args().get('task')\nif task:\n    comment_suffix += ' #{}'.format(task)\n\
  \ntext = demisto.args().get('text', '')\nif not text:\n    option1 = demisto.args().get('option1')\n\
  \    option2 = demisto.args().get('option2')\n    text += 'Please reply with either\
  \ ' + option1 + ' or ' + option2;\n    additional_options = demisto.args().get('additionalOptions')\n\
  \    if additional_options:\n        additional_options_list = additional_options.split(',')\n\
  \        text += ' or '\n        text += (' or ').join(additional_options_list)\n\
  text += '\\n\\nDemistoID: ' + comment_suffix;\n\noid = demisto.args().get('oid')\n\
  \ncomment = demisto.executeCommand('salesforce-push-comment', {'oid': oid, 'text':\
  \ text})\ndemisto.results(comment)"
scripttarget: 0
subtype: python2
tags: []
toversion: 4.1.9
type: python
