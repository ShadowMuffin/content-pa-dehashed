id: d5cb69b1-c81c-4f27-8a40-3106c0cb2620
inputs: []
name: AWS - IAM Test Playbook
outputs: []
starttaskid: '0'
system: true
tasks:
  '0':
    id: '0'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '14'
    note: false
    separatecontext: false
    task:
      brand: ''
      id: 369194e3-c543-432a-881e-17a5d855f077
      iscommand: false
      name: ''
      version: -1
    taskid: 369194e3-c543-432a-881e-17a5d855f077
    timertriggers: []
    type: start
    view: "{\n  \"position\": {\n    \"x\": 480,\n    \"y\": 50\n  }\n}"
  '1':
    id: '1'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '57'
      - '58'
      - '61'
    note: false
    scriptarguments:
      path: {}
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
      userName:
        simple: playbooktestuser
    separatecontext: false
    task:
      brand: AWS - IAM
      description: Creates a new IAM user for your AWS account.
      id: 6829323a-f753-4a87-831c-619e3369dab7
      iscommand: true
      name: aws-iam-create-user
      script: AWS - IAM|||aws-iam-create-user
      type: regular
      version: -1
    taskid: 6829323a-f753-4a87-831c-619e3369dab7
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 480,\n    \"y\": 3870\n  }\n}"
  '10':
    id: '10'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '9'
    note: false
    scriptarguments:
      groupName:
        simple: playbookgrp
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
      userName:
        simple: playbookuser
    separatecontext: false
    task:
      brand: AWS - IAM
      description: Adds the specified user to the specified group.
      id: e8ff9cc3-7c83-427a-8de6-d82cb88784ab
      iscommand: true
      name: aws-iam-add-user-to-group
      script: AWS - IAM|||aws-iam-add-user-to-group
      type: regular
      version: -1
    taskid: e8ff9cc3-7c83-427a-8de6-d82cb88784ab
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 480,\n    \"y\": 7895\n  }\n}"
  '11':
    id: '11'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '66'
    note: false
    scriptarguments:
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
      userName:
        simple: playbookuser
    separatecontext: false
    task:
      brand: AWS - IAM
      description: Creates a new AWS secret access key and corresponding AWS access
        key ID for the specified user. The default status for new keys is Active .
      id: 2c3694eb-23e2-43a9-8182-23fff85fecf7
      iscommand: true
      name: aws-iam-create-access-key
      script: AWS - IAM|||aws-iam-create-access-key
      type: regular
      version: -1
    taskid: 2c3694eb-23e2-43a9-8182-23fff85fecf7
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 480,\n    \"y\": 5445\n  }\n}"
  '12':
    id: '12'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '13'
    note: false
    scriptarguments:
      accessKeyId:
        simple: ${AWS.IAM.Users.AccessKeys.AccessKeyId}
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
      status:
        simple: Inactive
      userName:
        simple: playbookuser
    separatecontext: false
    task:
      brand: AWS - IAM
      description: Changes the status of the specified access key from Active to Inactive,
        or vice versa. This operation can be used to disable a user's key as part
        of a key rotation workflow.
      id: be24f901-ccba-437e-8496-c17b8708c119
      iscommand: true
      name: aws-iam-update-access-key
      script: AWS - IAM|||aws-iam-update-access-key
      type: regular
      version: -1
    taskid: be24f901-ccba-437e-8496-c17b8708c119
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 480,\n    \"y\": 5795\n  }\n}"
  '13':
    id: '13'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '67'
    note: false
    scriptarguments:
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
      userName:
        simple: playbookuser
    separatecontext: false
    task:
      brand: AWS - IAM
      description: Returns information about the access key IDs associated with the
        specified IAM user.
      id: 8c8256ed-54f2-4ec7-8c55-dd8bea8f3cbc
      iscommand: true
      name: aws-iam-list-access-keys-for-user
      script: AWS - IAM|||aws-iam-list-access-keys-for-user
      type: regular
      version: -1
    taskid: 8c8256ed-54f2-4ec7-8c55-dd8bea8f3cbc
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 480,\n    \"y\": 5970\n  }\n}"
  '14':
    id: '14'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '35'
      - '36'
      - '37'
    note: false
    scriptarguments:
      onlyAttached: {}
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
      scope:
        simple: AWS
    separatecontext: false
    task:
      brand: AWS - IAM
      description: Lists all the managed policies that are available in your AWS account,
        including your own customer-defined managed policies and all AWS managed policies.
      id: d53bf6fa-8bc2-4426-81f4-6042b8c55862
      iscommand: true
      name: aws-iam-list-policies
      script: AWS - IAM|||aws-iam-list-policies
      type: regular
      version: -1
    taskid: d53bf6fa-8bc2-4426-81f4-6042b8c55862
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 480,\n    \"y\": 195\n  }\n}"
  '15':
    id: '15'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '55'
      - '56'
    note: false
    scriptarguments:
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
    separatecontext: false
    task:
      brand: AWS - IAM
      description: Lists all IAM roles
      id: 0759b5fc-2e5c-459e-8097-aef217811138
      iscommand: true
      name: aws-iam-list-roles
      script: AWS - IAM|||aws-iam-list-roles
      type: regular
      version: -1
    taskid: 0759b5fc-2e5c-459e-8097-aef217811138
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 480,\n    \"y\": 3345\n  }\n}"
  '16':
    id: '16'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '11'
    note: false
    scriptarguments:
      entityName:
        simple: playbookuser
      policyArn:
        simple: ${AWS.IAM.Policies.[0].Arn}
      type:
        simple: User
    separatecontext: false
    task:
      brand: AWS - IAM
      description: Attaches the specified managed policy to the specified IAM Entity.
      id: fd614b26-589f-4e9b-8489-27471d110328
      iscommand: true
      name: aws-iam-attach-policy
      script: AWS - IAM|||aws-iam-attach-policy
      type: regular
      version: -1
    taskid: fd614b26-589f-4e9b-8489-27471d110328
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 480,\n    \"y\": 5270\n  }\n}"
  '17':
    id: '17'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '5'
    note: false
    scriptarguments:
      entityName:
        simple: playbookuser
      policyArn:
        simple: ${AWS.IAM.Policies.[0].Arn}
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
      type:
        simple: User
    separatecontext: false
    task:
      brand: AWS - IAM
      description: Removes the specified managed policy from the specified IAM Entity.
      id: 64d6cb68-4451-462d-8e7f-76c2d860ed29
      iscommand: true
      name: aws-iam-detach-policy
      script: AWS - IAM|||aws-iam-detach-policy
      type: regular
      version: -1
    taskid: 64d6cb68-4451-462d-8e7f-76c2d860ed29
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 480,\n    \"y\": 8770\n  }\n}"
  '19':
    id: '19'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '17'
    note: false
    scriptarguments:
      groupName:
        simple: playbookgrp
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
    separatecontext: false
    task:
      brand: AWS - IAM
      description: Deletes the specified IAM group. The group must not contain any
        users or have any attached policies.
      id: 5dead601-4abf-468f-874a-1d3064ac0445
      iscommand: true
      name: aws-iam-delete-group
      script: AWS - IAM|||aws-iam-delete-group
      type: regular
      version: -1
    taskid: 5dead601-4abf-468f-874a-1d3064ac0445
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 480,\n    \"y\": 8595\n  }\n}"
  '2':
    id: '2'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '62'
      - '63'
    note: false
    scriptarguments:
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
      userName:
        simple: playbookuser
    separatecontext: false
    task:
      brand: AWS - IAM
      description: Retrieves information about the specified IAM user, including the
        user's creation date, path, unique ID, and ARN.
      id: d6aac018-d2ba-4cb4-85c5-6a472aa1e721
      iscommand: true
      name: aws-iam-get-user
      script: AWS - IAM|||aws-iam-get-user
      type: regular
      version: -1
    taskid: d6aac018-d2ba-4cb4-85c5-6a472aa1e721
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 480,\n    \"y\": 4570\n  }\n}"
  '20':
    id: '20'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '19'
    note: false
    scriptarguments:
      groupName:
        simple: playbookgrp
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
      userName:
        simple: playbookuser
    separatecontext: false
    task:
      brand: AWS - IAM
      description: Removes the specified user from the specified group.
      id: 0c24911e-59c3-4ca1-8af5-8ef5daae1760
      iscommand: true
      name: aws-iam-remove-user-from-group
      script: AWS - IAM|||aws-iam-remove-user-from-group
      type: regular
      version: -1
    taskid: 0c24911e-59c3-4ca1-8af5-8ef5daae1760
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 480,\n    \"y\": 8420\n  }\n}"
  '22':
    id: '22'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '7'
    note: false
    scriptarguments:
      AccessKeyId:
        simple: ${AWS.IAM.Users.[1].AccessKeys.AccessKeyId}
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
      userName:
        simple: playbookuser
    separatecontext: false
    task:
      brand: AWS - IAM
      description: Deletes the access key pair associated with the specified IAM user.
      id: 98e42481-074d-4dd5-8081-9389f781d42b
      iscommand: true
      name: aws-iam-delete-access-key
      script: AWS - IAM|||aws-iam-delete-access-key
      type: regular
      version: -1
    taskid: 98e42481-074d-4dd5-8081-9389f781d42b
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 480,\n    \"y\": 6320\n  }\n}"
  '23':
    id: '23'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '42'
      - '41'
    note: false
    scriptarguments:
      instanceProfileName:
        simple: playbookinstanceprofile
      path: {}
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
    separatecontext: false
    task:
      brand: AWS - IAM
      description: Creates a new instance profile.
      id: af0f0c50-2e5b-4e6d-8685-dcd415d18005
      iscommand: true
      name: aws-iam-create-instance-profile
      script: AWS - IAM|||aws-iam-create-instance-profile
      type: regular
      version: -1
    taskid: af0f0c50-2e5b-4e6d-8685-dcd415d18005
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 480,\n    \"y\": 895\n  }\n}"
  '24':
    id: '24'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '30'
    note: false
    scriptarguments:
      instanceProfileName:
        simple: playbookinstanceprofile
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
    separatecontext: false
    task:
      brand: AWS - IAM
      description: Deletes the specified instance profile. The instance profile must
        not have an associated role.
      id: c5ed5150-346c-4432-86c5-ffbae9766096
      iscommand: true
      name: aws-iam-delete-instance-profile
      script: AWS - IAM|||aws-iam-delete-instance-profile
      type: regular
      version: -1
    taskid: c5ed5150-346c-4432-86c5-ffbae9766096
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 480,\n    \"y\": 2820\n  }\n}"
  '25':
    id: '25'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '49'
      - '50'
    note: false
    scriptarguments:
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
    separatecontext: false
    task:
      brand: AWS - IAM
      description: Lists all the instance profiles tin your AWS account.
      id: 09cfb140-6caf-48f7-8997-50ffcbe51198
      iscommand: true
      name: aws-iam-list-instance-profiles
      script: AWS - IAM|||aws-iam-list-instance-profiles
      type: regular
      version: -1
    taskid: 09cfb140-6caf-48f7-8997-50ffcbe51198
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 480,\n    \"y\": 1945\n  }\n}"
  '26':
    id: '26'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '45'
      - '47'
    note: false
    scriptarguments:
      instanceProfileName:
        simple: playbookinstanceprofile
      roleArn: {}
      roleName:
        simple: playbookrole
      roleSessionDuration: {}
      roleSessionName: {}
    separatecontext: false
    task:
      brand: AWS - IAM
      description: Adds the specified IAM role to the specified instance profile.
        An instance profile can contain only one role, and this limit cannot be increased.
        You can remove the existing role and then add a different role to an instance
        profile.
      id: c2ab6df3-26d8-4582-8c47-9f6646ac979e
      iscommand: true
      name: aws-iam-add-role-to-instance-profile
      script: AWS - IAM|||aws-iam-add-role-to-instance-profile
      type: regular
      version: -1
    taskid: c2ab6df3-26d8-4582-8c47-9f6646ac979e
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 480,\n    \"y\": 1595\n  }\n}"
  '27':
    id: '27'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '24'
    note: false
    scriptarguments:
      instanceProfileName:
        simple: playbookinstanceprofile
      roleArn: {}
      roleName:
        simple: playbookrole
      roleSessionDuration: {}
      roleSessionName: {}
    separatecontext: false
    task:
      brand: AWS - IAM
      description: Removes the specified IAM role from the specified EC2 instance
        profile.
      id: 3ef7e750-7ad9-4ad7-88ef-d0149086f74d
      iscommand: true
      name: aws-iam-remove-role-from-instance-profile
      script: AWS - IAM|||aws-iam-remove-role-from-instance-profile
      type: regular
      version: -1
    taskid: 3ef7e750-7ad9-4ad7-88ef-d0149086f74d
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 480,\n    \"y\": 2645\n  }\n}"
  '28':
    id: '28'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '51'
      - '52'
    note: false
    scriptarguments:
      roleArn: {}
      roleName:
        simple: playbookrole
      roleSessionDuration: {}
      roleSessionName: {}
    separatecontext: false
    task:
      brand: AWS - IAM
      description: Lists the instance profiles that have the specified associated
        IAM role.
      id: 7ab56f94-4422-46ea-82a8-3e86c20881fa
      iscommand: true
      name: aws-iam-list-instance-profiles-for-role
      script: AWS - IAM|||aws-iam-list-instance-profiles-for-role
      type: regular
      version: -1
    taskid: 7ab56f94-4422-46ea-82a8-3e86c20881fa
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 480,\n    \"y\": 2295\n  }\n}"
  '29':
    id: '29'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '43'
      - '44'
    note: false
    scriptarguments:
      instanceProfileName:
        simple: playbookinstanceprofile
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
    separatecontext: false
    task:
      brand: AWS - IAM
      description: Retrieves information about the specified instance profile.
      id: e6873b40-830f-4478-80c3-a900bc913b20
      iscommand: true
      name: aws-iam-get-instance-profile
      script: AWS - IAM|||aws-iam-get-instance-profile
      type: regular
      version: -1
    taskid: e6873b40-830f-4478-80c3-a900bc913b20
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 480,\n    \"y\": 1245\n  }\n}"
  '3':
    id: '3'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '64'
      - '65'
    note: false
    scriptarguments:
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
    separatecontext: false
    task:
      brand: AWS - IAM
      description: Lists the IAM users, returns all users in the AWS account.
      id: b00d1c30-17e6-4c8b-85c9-0784a8d597f2
      iscommand: true
      name: aws-iam-list-users
      script: AWS - IAM|||aws-iam-list-users
      type: regular
      version: -1
    taskid: b00d1c30-17e6-4c8b-85c9-0784a8d597f2
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 480,\n    \"y\": 4920\n  }\n}"
  '30':
    id: '30'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '53'
      - '54'
    note: false
    scriptarguments:
      roleArn: {}
      roleName:
        simple: playbookrole
      roleSessionDuration: {}
      roleSessionName: {}
    separatecontext: false
    task:
      brand: AWS - IAM
      description: Retrieves information about the specified role.
      id: 8912184a-bf7c-4abe-84f9-61f8189aa0b2
      iscommand: true
      name: aws-iam-get-role
      script: AWS - IAM|||aws-iam-get-role
      type: regular
      version: -1
    taskid: 8912184a-bf7c-4abe-84f9-61f8189aa0b2
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 480,\n    \"y\": 2995\n  }\n}"
  '31':
    id: '31'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '1'
    note: false
    scriptarguments:
      roleArn: {}
      roleName:
        simple: playbookrole
      roleSessionDuration: {}
      roleSessionName: {}
    separatecontext: false
    task:
      brand: AWS - IAM
      description: 'Deletes the specified role. The role must not have any policies
        attached. '
      id: 103d125e-ee64-4866-8324-263d4e23fe45
      iscommand: true
      name: aws-iam-delete-role
      script: AWS - IAM|||aws-iam-delete-role
      type: regular
      version: -1
    taskid: 103d125e-ee64-4866-8324-263d4e23fe45
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 480,\n    \"y\": 3695\n  }\n}"
  '32':
    id: '32'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '40'
      - '39'
    note: false
    scriptarguments:
      assumeRolePolicyDocument:
        simple: "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n  \
          \    \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"Service\"\
          : \"ec2.amazonaws.com\"\n      },\n      \"Action\": \"sts:AssumeRole\"\n\
          \    }\n  ]\n}"
      description: {}
      maxSessionDuration: {}
      path: {}
      roleArn: {}
      roleName:
        simple: playbookrole
      roleSessionDuration: {}
      roleSessionName: {}
    separatecontext: false
    task:
      brand: AWS - IAM
      description: Creates a new role for your AWS account.
      id: 01f3f26d-58c3-42f9-85f2-354c136f6670
      iscommand: true
      name: aws-iam-create-role
      script: AWS - IAM|||aws-iam-create-role
      type: regular
      version: -1
    taskid: 01f3f26d-58c3-42f9-85f2-354c136f6670
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 480,\n    \"y\": 545\n  }\n}"
  '35':
    id: '35'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '32'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.Policies.PolicyId
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: 06689984-9e57-40a4-8426-3802e74036d7
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: 06689984-9e57-40a4-8426-3802e74036d7
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 50,\n    \"y\": 370\n  }\n}"
  '36':
    id: '36'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '32'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.Policies.PolicyName
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: d0b6f417-50f3-491d-8e18-358825ebd1ea
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: d0b6f417-50f3-491d-8e18-358825ebd1ea
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 480,\n    \"y\": 370\n  }\n}"
  '37':
    id: '37'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '32'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.Policies.Arn
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: 38614631-103f-4177-8a5f-fa6690f43cbd
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: 38614631-103f-4177-8a5f-fa6690f43cbd
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 910,\n    \"y\": 370\n  }\n}"
  '39':
    id: '39'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '23'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.Roles.Arn
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: cf07db63-6a99-48eb-8fe1-b0ef8a713075
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: cf07db63-6a99-48eb-8fe1-b0ef8a713075
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 265,\n    \"y\": 720\n  }\n}"
  '4':
    id: '4'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '59'
      - '60'
    note: false
    scriptarguments:
      newPath: {}
      newUserName:
        simple: playbookuser
      oldUserName:
        simple: playbooktestuser
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
    separatecontext: false
    task:
      brand: AWS - IAM
      description: Updates the name and/or the path of the specified IAM user.
      id: 32233c4c-2766-41f7-8a14-856ff54ac66f
      iscommand: true
      name: aws-iam-update-user
      script: AWS - IAM|||aws-iam-update-user
      type: regular
      version: -1
    taskid: 32233c4c-2766-41f7-8a14-856ff54ac66f
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 480,\n    \"y\": 4220\n  }\n}"
  '40':
    id: '40'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '23'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.Roles.RoleName
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: 503c85f3-ff19-48a4-80a7-5bbdbc783e4e
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: 503c85f3-ff19-48a4-80a7-5bbdbc783e4e
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 695,\n    \"y\": 720\n  }\n}"
  '41':
    id: '41'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '29'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.InstanceProfiles.Arn
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: e1697e48-ba06-4a29-8a87-9b62934b7f71
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: e1697e48-ba06-4a29-8a87-9b62934b7f71
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 265,\n    \"y\": 1070\n  }\n}"
  '42':
    id: '42'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '29'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.InstanceProfiles.InstanceProfileName
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: 91d2f1d7-a89d-4674-8ac7-ab0227bb72c7
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: 91d2f1d7-a89d-4674-8ac7-ab0227bb72c7
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 695,\n    \"y\": 1070\n  }\n}"
  '43':
    id: '43'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '26'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.InstanceProfiles.InstanceProfileName
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: 8205d2d8-cebd-487d-8717-4cdc9974fa12
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: 8205d2d8-cebd-487d-8717-4cdc9974fa12
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 265,\n    \"y\": 1420\n  }\n}"
  '44':
    id: '44'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '26'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.InstanceProfiles.InstanceProfileName
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: fd37dc1a-a275-4325-8c0b-4901205ee719
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: fd37dc1a-a275-4325-8c0b-4901205ee719
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 695,\n    \"y\": 1420\n  }\n}"
  '45':
    id: '45'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '25'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.InstanceProfiles.Arn
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: 345347a3-0647-4ea3-8f3e-f23139309213
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: 345347a3-0647-4ea3-8f3e-f23139309213
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 265,\n    \"y\": 1770\n  }\n}"
  '47':
    id: '47'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '25'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.InstanceProfiles.InstanceProfileName
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: a90a064c-c5da-4d5c-848b-d0628f63ada5
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: a90a064c-c5da-4d5c-848b-d0628f63ada5
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 695,\n    \"y\": 1770\n  }\n}"
  '49':
    id: '49'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '28'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.InstanceProfiles.Arn
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: a582cfa0-83f4-4150-8e8b-a77bb5012014
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: a582cfa0-83f4-4150-8e8b-a77bb5012014
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 265,\n    \"y\": 2120\n  }\n}"
  '5':
    id: '5'
    ignoreworker: false
    note: false
    scriptarguments:
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
      userName:
        simple: playbookuser
    separatecontext: false
    task:
      brand: AWS - IAM
      description: Deletes the specified IAM user. The user must not belong to any
        groups or have any access keys, signing certificates, or attached policies.
      id: 08a5d4b9-41f4-4e44-8b9f-783bca607e1d
      iscommand: true
      name: aws-iam-delete-user
      script: AWS - IAM|||aws-iam-delete-user
      type: regular
      version: -1
    taskid: 08a5d4b9-41f4-4e44-8b9f-783bca607e1d
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 480,\n    \"y\": 8945\n  }\n}"
  '50':
    id: '50'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '28'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.InstanceProfiles.Roles.CreateDate
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: 97111a54-d50b-47f3-835b-461e633f35c6
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: 97111a54-d50b-47f3-835b-461e633f35c6
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 695,\n    \"y\": 2120\n  }\n}"
  '51':
    id: '51'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '27'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.InstanceProfiles.Arn
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: d1fb370f-f03b-4f99-8f33-40b042a101f0
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: d1fb370f-f03b-4f99-8f33-40b042a101f0
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 265,\n    \"y\": 2470\n  }\n}"
  '52':
    id: '52'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '27'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.InstanceProfiles.Roles.CreateDate
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: 8f28ba65-4529-4c5e-8191-c070041ead33
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: 8f28ba65-4529-4c5e-8191-c070041ead33
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 695,\n    \"y\": 2470\n  }\n}"
  '53':
    id: '53'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '15'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.Roles.Arn
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: 36cf476d-740f-467e-8800-fe629ea8bb3c
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: 36cf476d-740f-467e-8800-fe629ea8bb3c
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 265,\n    \"y\": 3170\n  }\n}"
  '54':
    id: '54'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '15'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.Roles.RoleName
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: 31b57cfb-3494-4bc6-8208-d2dbeeddf919
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: 31b57cfb-3494-4bc6-8208-d2dbeeddf919
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 695,\n    \"y\": 3170\n  }\n}"
  '55':
    id: '55'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '31'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.Roles.Arn
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: 3515173e-aa8e-417b-861d-dd1572fbae5e
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: 3515173e-aa8e-417b-861d-dd1572fbae5e
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 265,\n    \"y\": 3520\n  }\n}"
  '56':
    id: '56'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '31'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.Roles.Arn
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: 58268a5f-e7c9-423c-8e2e-ae7f9a965b9d
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: 58268a5f-e7c9-423c-8e2e-ae7f9a965b9d
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 695,\n    \"y\": 3520\n  }\n}"
  '57':
    id: '57'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '4'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.Roles.Arn
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: a3882c70-4d6e-4aaa-880e-fe5cf628d696
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: a3882c70-4d6e-4aaa-880e-fe5cf628d696
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 50,\n    \"y\": 4045\n  }\n}"
  '58':
    id: '58'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '4'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.Users.UserId
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: 79ca8478-110a-417e-8f89-ff38b3272d18
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: 79ca8478-110a-417e-8f89-ff38b3272d18
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 480,\n    \"y\": 4045\n  }\n}"
  '59':
    id: '59'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '2'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.Users.UserName
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: dec2b67f-d985-4f8d-8129-c06586032d10
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: dec2b67f-d985-4f8d-8129-c06586032d10
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 265,\n    \"y\": 4395\n  }\n}"
  '60':
    id: '60'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '2'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.Users.UserId
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: ace1e492-5791-4377-8b3f-053a8e9946b4
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: ace1e492-5791-4377-8b3f-053a8e9946b4
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 695,\n    \"y\": 4395\n  }\n}"
  '61':
    id: '61'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '4'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.Users.Arn
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: 2460bb52-f0c3-47d9-8b12-32cb5f14d9cd
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: 2460bb52-f0c3-47d9-8b12-32cb5f14d9cd
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 910,\n    \"y\": 4045\n  }\n}"
  '62':
    id: '62'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '3'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.Users.UserName
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: 68baf0f7-8eae-4512-85f4-a29bacf48369
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: 68baf0f7-8eae-4512-85f4-a29bacf48369
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 265,\n    \"y\": 4745\n  }\n}"
  '63':
    id: '63'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '3'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.Users.UserId
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: 50cd1faf-f9c6-41ea-83b9-c2ce082b052e
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: 50cd1faf-f9c6-41ea-83b9-c2ce082b052e
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 695,\n    \"y\": 4745\n  }\n}"
  '64':
    id: '64'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '16'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.Users.UserName
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: 1678e0cc-d020-4406-8ba2-652b4aec9825
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: 1678e0cc-d020-4406-8ba2-652b4aec9825
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 265,\n    \"y\": 5095\n  }\n}"
  '65':
    id: '65'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '16'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.Users.UserId
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: 6f0598ae-b760-4461-885a-582960de5ec3
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: 6f0598ae-b760-4461-885a-582960de5ec3
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 695,\n    \"y\": 5095\n  }\n}"
  '66':
    id: '66'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '12'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.Users.AccessKeys.AccessKeyId
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: 7e661372-7f41-447a-824d-13ad99035358
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: 7e661372-7f41-447a-824d-13ad99035358
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 480,\n    \"y\": 5620\n  }\n}"
  '67':
    id: '67'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '22'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.Users.AccessKeys.AccessKeyId
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: dd32d671-1416-41ee-8e55-7c6c117df5f3
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: dd32d671-1416-41ee-8e55-7c6c117df5f3
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 480,\n    \"y\": 6145\n  }\n}"
  '68':
    id: '68'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '8'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.Groups.GroupId
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: 0dbcc6ca-4b4b-4d9a-86d8-1a6a2c6a5617
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: 0dbcc6ca-4b4b-4d9a-86d8-1a6a2c6a5617
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 265,\n    \"y\": 7370\n  }\n}"
  '69':
    id: '69'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '8'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.Groups.Arn
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: dab4e828-209b-4781-8e32-1c0e817f866d
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: dab4e828-209b-4781-8e32-1c0e817f866d
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 695,\n    \"y\": 7370\n  }\n}"
  '7':
    id: '7'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '68'
      - '69'
    note: false
    scriptarguments:
      groupName:
        simple: playbookgrp
      path: {}
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
    separatecontext: false
    task:
      brand: AWS - IAM
      description: Creates a new iam group.
      id: b9b6f5a7-b220-4b10-84f4-a5f6b6cf108c
      iscommand: true
      name: aws-iam-create-group
      script: AWS - IAM|||aws-iam-create-group
      type: regular
      version: -1
    taskid: b9b6f5a7-b220-4b10-84f4-a5f6b6cf108c
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 480,\n    \"y\": 7195\n  }\n}"
  '70':
    id: '70'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '10'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.Groups.Arn
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: f44f23ff-9a26-4236-8129-2cffabeaf634
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: f44f23ff-9a26-4236-8129-2cffabeaf634
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 265,\n    \"y\": 7720\n  }\n}"
  '71':
    id: '71'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '10'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.Groups.GroupId
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: 35d82c69-6049-47c2-8696-a5388a6e0115
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: 35d82c69-6049-47c2-8696-a5388a6e0115
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 695,\n    \"y\": 7720\n  }\n}"
  '72':
    id: '72'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '20'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.Users.Groups.Arn
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: 67ba6872-209a-4c68-8c47-0e7c431d6bf5
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: 67ba6872-209a-4c68-8c47-0e7c431d6bf5
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 265,\n    \"y\": 8245\n  }\n}"
  '73':
    id: '73'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '20'
    note: false
    scriptarguments:
      expectedValue: {}
      fields: {}
      path:
        simple: AWS.IAM.Users.Groups.GroupId
    separatecontext: false
    task:
      brand: ''
      description: 'Verifies path in context:

        - Verifies path existence

        - If matching object is an array: verify fields exists in each of the objects
        in the array

        - If matching object is not an array: verify fields exists in matching object

        - if ''expectedValue'' is given: ensure that the given value is equal to the
        context path'
      id: 129dc85b-22bd-42b8-8fc6-8d47d9eb85ce
      iscommand: false
      name: VerifyContext
      scriptName: VerifyContext
      type: regular
      version: -1
    taskid: 129dc85b-22bd-42b8-8fc6-8d47d9eb85ce
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 695,\n    \"y\": 8245\n  }\n}"
  '8':
    id: '8'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '70'
      - '71'
    note: false
    scriptarguments:
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
    separatecontext: false
    task:
      brand: AWS - IAM
      description: Lists all the IAM groups in the AWS account
      id: 40828136-0be9-4cae-8578-6f6c583cec75
      iscommand: true
      name: aws-iam-list-groups
      script: AWS - IAM|||aws-iam-list-groups
      type: regular
      version: -1
    taskid: 40828136-0be9-4cae-8578-6f6c583cec75
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 480,\n    \"y\": 7545\n  }\n}"
  '9':
    id: '9'
    ignoreworker: false
    nexttasks:
      '#none#':
      - '72'
      - '73'
    note: false
    scriptarguments:
      roleArn: {}
      roleSessionDuration: {}
      roleSessionName: {}
      userName:
        simple: playbookuser
    separatecontext: false
    task:
      brand: AWS - IAM
      description: Lists the IAM groups that the specified IAM user belongs to.
      id: f56f59ec-149d-4989-88a7-1e7cf9a4aafb
      iscommand: true
      name: aws-iam-list-groups-for-user
      script: AWS - IAM|||aws-iam-list-groups-for-user
      type: regular
      version: -1
    taskid: f56f59ec-149d-4989-88a7-1e7cf9a4aafb
    timertriggers: []
    type: regular
    view: "{\n  \"position\": {\n    \"x\": 480,\n    \"y\": 8070\n  }\n}"
toversion: 4.1.9
version: -1
view: "{\n  \"linkLabelsPosition\": {},\n  \"paper\": {\n    \"dimensions\": {\n \
  \     \"height\": 8990,\n      \"width\": 1240,\n      \"x\": 50,\n      \"y\":\
  \ 50\n    }\n  }\n}"
