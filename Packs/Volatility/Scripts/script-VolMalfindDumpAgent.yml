args:
- default: true
  description: Path to memory dump file on the system being used
  name: memdump
  required: true
- description: Process ID to pass to volatility malfind command
  name: pid
  required: true
- description: Path to directory in which to save dumped memory sections
  name: dumpdir
  required: true
- description: If "true", deletes the dir with the VAD dumps
  name: dodelete
- description: Volatility system to run the script on.
  name: system
  required: true
comment: Volatility script for command ldrmodules
commonfields:
  id: VolMalfindDumpAgent
  version: -1
dependson: {}
name: VolMalfindDumpAgent
script: "var res = [];\nvar output = {Success: false};\nvar cmdline = 'sudo vol.py\
  \ -f ' + args.memdump + ' malfind';\nif (args.pid) {\n   cmdline = cmdline + ' -p\
  \ ' + args.pid;\n}\nvar dumpdir = args.dumpdir;\ncmdline = cmdline + ' -D ' + dumpdir;\n\
  \nexecuteCommand('RemoteExec', {system:args.system, cmd:'sudo mkdir ' + dumpdir});\n\
  var volExec = executeCommand('RemoteExec', {system:args.system, cmd: cmdline})[0];\n\
  res.push(volExec);\nif (volExec.Type !== entryTypes.error) {\n   // we need to take\
  \ all the files and move them over.\n   res.push(executeCommand('copy-from', {using:args.system,\
  \ file: dumpdir + '/*'}));\n}\nif ('true' === args.dodelete) {\n    res.push(executeCommand('RemoteExec',\
  \ {system:args.system, cmd:'sudo rm -rf ' + dumpdir}));\n}\n\nreturn res;"
scripttarget: 0
system: true
tags:
- volatility
timeout: 0s
toversion: 4.1.9
type: javascript
