args:
- description: Active Directory Distinguished Name of the desired user
  name: dn
- description: Name of the desired user
  name: name
- description: Include these AD attributes of the resulting objects in addition to
    the default ones
  name: attributes
comment: Use Active Directory to retrieve the email address associated with the specified
  user. The user can be specified by name, email or as an Active Directory Distinguished
  Name (DN).
commonfields:
  id: ADGetEmailForUser
  version: -1
dependson:
  must:
  - ad-search
deprecated: true
name: ADGetEmailForUser
script: "# Optional arguments and default values\nattrs = 'name,displayname,mail'\n\
  if demisto.get(demisto.args(), 'attributes'):\n    attrs += \",\" + demisto.args()['attributes']\n\
  memberDN = ''\nif demisto.get(demisto.args(), 'dn'):\n    memberDN = demisto.args()['dn']\n\
  elif demisto.get(demisto.args(), 'name'):\n    resp = demisto.executeCommand( 'AdSearch',\
  \ { 'filter' : \"(&(objectClass=User)(name=\" + demisto.args()['name'] + \"))\"\
  \ } )\n    if type(resp)==list and len(resp)==1 and type(resp[0])==dict and 'Contents'\
  \ in resp[0] and type(resp[0]['Contents'])==list and len(resp[0]['Contents'])==1\
  \ and type(resp[0]['Contents'][0])==dict and 'dn' in resp[0]['Contents'][0]:\n \
  \       memberDN = resp[0]['Contents'][0]['dn']\n    else:\n        demisto.results(\
  \ resp )\n        sys.exit(0)\nelse:\n    demisto.results( { 'Type' : entryTypes['error'],\
  \ 'ContentsFormat' : formats['text'], 'Contents' : 'You must provide either dn or\
  \ name as argument!' } )\n    sys.exit(0)\nif memberDN:\n    filterstr = r\"(&(objectClass=User)(distinguishedName=\"\
  \ + memberDN + \"))\"\n    resp = demisto.executeCommand( 'AdSearch' , { 'filter'\
  \ : filterstr, 'attributes' : attrs } )\n    if not isError(resp[0]) and not 'No\
  \ results' == resp[0]['Contents']:\n        if isinstance(resp[0]['Contents'], list)\
  \ and resp[0]['Contents']:\n            person = resp[0]['Contents'][0]\n      \
  \      dispname = demisto.get(person, 'displayname')\n            if dispname:\n\
  \                demisto.setContext('ADDisplayName', dispname)\n            name\
  \ = demisto.get(person, 'name')\n            if name:\n                demisto.setContext('ADPersonName',\
  \ name)\n            dn = demisto.get(person, 'dn')\n            if dn:\n      \
  \          demisto.setContext('ADDistinguishedName', dn)\n    demisto.results(resp)\n\
  else:\n    demisto.results( { 'Type' : entryTypes['error'], 'ContentsFormat' : formats['text'],\
  \ 'Contents' : 'User not found.' } )"
scripttarget: 0
subtype: python2
system: true
tags:
- active directory
timeout: 0s
toversion: 4.1.9
type: python
