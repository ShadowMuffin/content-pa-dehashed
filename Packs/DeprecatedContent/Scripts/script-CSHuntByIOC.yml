args:
- default: true
  description: One of sha256, sha1, md5, domain
  name: type
  required: true
- description: The IOC to find
  name: value
  required: true
comment: 'List devices that match a specific IOC - an IOC ran on them - limited to
  sha256, sha1, md5 and domain types

  '
commonfields:
  id: CSHuntByIOC
  version: -1
dependson:
  must:
  - cs-device-ran-on
deprecated: true
name: CSHuntByIOC
script: "res = []\nt = []\nfor v in argToList(demisto.args()['value']):\n    e = demisto.executeCommand(\"\
  cs-device-ran-on\", {\"type\": demisto.args()['type'], \"value\": v})[0]\n    if\
  \ isError(e):\n        if not '404 (Not Found)' in e['Contents']: # Skip 404 errors\
  \ - it just means the IOC wasn't found\n            res += [e]\n    else:\n    \
  \    myData = demisto.get(e, 'Contents.resources')\n        if myData:\n       \
  \     t += [{'Result found': demisto.args()['type'] + ':' + v, 'Device ID': h} for\
  \ h in myData]\nif t:\n    demisto.setContext('CSFoundDevices', ','.join([detection['Device\
  \ ID'] for detection in t]))\n    res.append({'ContentsFormat': formats['table'],\
  \ 'Type': entryTypes['note'], 'Contents': t} )\nelse:\n    res.append('No results.')\n\
  demisto.results(res)"
scripttarget: 0
subtype: python2
system: true
tags:
- crowdstrike
tests:
- No Test
timeout: 0s
toversion: 4.1.9
type: python
