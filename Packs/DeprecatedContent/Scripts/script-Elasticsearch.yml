args:
- description: Computes a score explanation for a query and a specific document, default
    false
  name: explain
- description: Fields to fetch, leave empty to bring the entire document
  name: fields
- description: Index name/s to query, comma separated
  name: index
  required: true
- default: true
  description: search query
  name: query
  required: true
- description: Page number to start search from, default 0
  name: page
- description: Page size, 1 - 10000, default 100
  name: size
- description: Sort field[:order] order = true for ascending, default true
  name: sort
comment: 'Deprecated. Use the Elasticsearch v2 integration instead.


  Run a search query using Elasticsearch'
commonfields:
  id: Elasticsearch
  version: -1
dependson:
  must:
  - elasticsearch|||search
deprecated: true
enabled: true
name: Elasticsearch
script: "dArgs = demisto.args()\ndArgs['using-brand'] = 'elasticsearch'\nres = demisto.executeCommand('search',\
  \ dArgs)\nif isError(res[0]):\n    demisto.results(res)\nelse:\n    md = '### Elasticsearch\
  \ results\\n'\n    md += '* Query: ' + dArgs['query'] + '\\n'\n    md += '* Index:\
  \ ' + dArgs['index'] + '\\n'\n    if demisto.get(res[0],'Contents.total'):\n   \
  \     data = demisto.get(res[0], 'Contents.hits')\n        data = flattenTable(data)\n\
  \        demisto.results({'ContentsFormat': formats['table'], 'Type': entryTypes['note'],\
  \ 'Contents': data})\n    else:\n        demisto.results({'ContentsFormat': formats['text'],\
  \ 'Type': entryTypes['note'], 'Contents': 'No results.'})\n\n\n"
scripttarget: 0
subtype: python2
tags:
- Elasticsearch
tests:
- No test - deprecated
timeout: 0s
toversion: 4.1.9
type: python
