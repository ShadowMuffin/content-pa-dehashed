args:
- description: '"process" or "binary" according to the type of search you want to
    run.'
  name: type
- default: true
  description: Query to be run - in Carbon Black syntax
  name: query
- description: Number of rows to return. If omitted, default is as stated in the Carbon
    Black API documentation, currently 10.
  name: rows
- description: 'Start at this row #. Allows pagination through large response. If
    omitted, default is as stated in the Carbon Black API documentation, currently
    0. '
  name: start
comment: Deprecated, use the cb-binary command and cb-get-processes command, instead.
commonfields:
  id: CBSearch
  version: -1
dependson:
  must: []
  should:
  - cb-process
  - cb-binary
deprecated: true
name: CBSearch
script: "//Script to query carbon black servers:\n//type must be either 'process'\
  \ or 'binary'\n//can provide query & number of rows to return\nfunction formatresults(rows,\
  \ columns) {\n    var table = [];\n    for (var index in rows) {\n        var row\
  \ = rows[index];\n        if (typeof (row) === \"object\") {\n            tablerow\
  \ = {};\n            for (var name in row) {\n                var value = row[name];\n\
  \                if (typeof (value) === \"object\") {\n                    value\
  \ = JSON.stringify(value);\n                }\n                var columnIndex =\
  \ columns.indexOf(name);\n                var columnName;\n                if (columnIndex\
  \ !== -1) {\n                    columnName = columnIndex.toString() + \". \" +\
  \ name;\n                } else {\n                    columnName = name;\n    \
  \            }\n                tablerow[columnName] = value;\n            }\n \
  \           table.push(tablerow);\n        }\n    }\n    return table;\n}\nvar output\
  \ = [];\nvar searchType = args.type ? args.type : 'process';\nif ((searchType !==\
  \ 'process') && (searchType !== 'binary')) {\n    output.push({ContentsFormat: formats.text,\
  \ Type: entryTypes.error, Contents: \"Error! type must be 'process' or 'binary\"\
  });\n} else {\n    var res = [];\n    var columns = [];\n    if (searchType ===\
  \ 'process') {\n        columns = [\"hostname\", \"username\", \"process_pid\",\
  \ \"path\", \"process_md5\", \"start\", \"os_type\", \"parent_pid\", \"sensor_id\"\
  ];\n    } else {\n        columns = [\"md5\", \"observed_filename\", \"original_filename\"\
  , \"is_executable_image\", \"endpoint\", \"signed\", \"os_type\"];\n    }\n    myArgs\
  \ = {\n      start: args.start ? args.start : '0',\n      rows: args.rows ? args.rows\
  \ : '20'\n    };\n    if(args.query)\n        myArgs.query = args.query;\n    res\
  \ = executeCommand('cb-' + searchType, myArgs);\n    var table = formatresults(res[0].Contents.results,\
  \ columns);\n    output.push({ContentsFormat: formats.table, Type: entryTypes.note,\
  \ Contents: table});\n}\nreturn output;"
scripttarget: 0
system: true
tags:
- carbon-black
- endpoint
- enhancement
tests:
- No tests
timeout: 0s
toversion: 4.1.9
type: javascript
