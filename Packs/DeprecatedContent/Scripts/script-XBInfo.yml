comment: This script is deprecated. Use the Exabeam integration instead.
commonfields:
  id: XBInfo
  version: -1
dependson:
  must: []
  should:
  - xb-users
  - xb-assets
  - xb-events
deprecated: true
name: XBInfo
script: "res = '## Exabeam global info'\nentry = demisto.executeCommand('xb-users',\
  \ {})[0]\nif entry['Type'] != entryTypes['error'] and entry['ContentsFormat'] ==\
  \ formats['json']:\n    res += '\\n### Users:'\n    res += '\\n- High Risk: ' +\
  \ str(demisto.get(entry, 'Contents.highRisk'))\n    res += '\\n- Recent: ' + str(demisto.get(entry,\
  \ 'Contents.recent'))\n    res += '\\n- Total: ' + str(demisto.get(entry, 'Contents.total'))\n\
  entry = demisto.executeCommand('xb-assets', {})[0]\nif entry['Type'] != entryTypes['error']\
  \ and entry['ContentsFormat'] == formats['json']:\n    res += '\\n### Assets:'\n\
  \    res += '\\n- High Risk: ' + str(demisto.get(entry, 'Contents.highRisk'))\n\
  \    res += '\\n- Recent: ' + str(demisto.get(entry, 'Contents.recent'))\n    res\
  \ += '\\n- Total: ' + str(demisto.get(entry, 'Contents.total'))\nentry = demisto.executeCommand('xb-events',\
  \ {})[0]\nif entry['Type'] != entryTypes['error'] and entry['ContentsFormat'] ==\
  \ formats['json']:\n    res += '\\n### Events:'\n    res += '\\n- Recent: ' + str(int(demisto.get(entry,\
  \ 'Contents.recent')))\n    res += '\\n- Total: ' + str(int(demisto.get(entry, 'Contents.total')))\n\
  demisto.results({'ContentsFormat': formats['markdown'], 'Type': entryTypes['note'],\
  \ 'Contents': res})"
scripttarget: 0
subtype: python2
system: true
tags:
- server
- analytics
- exabeam
timeout: 0s
toversion: 4.1.9
type: python
