args:
- default: true
  description: URL to extract domain from
  name: url
  required: true
comment: Extract Domain from a URL. Domain will include sub-domain as well
commonfields:
  id: ExtractDomainFromURL
  version: -1
deprecated: true
name: ExtractDomainFromURL
outputs:
- contextPath: Domain.Name
  description: Domain name
script: "from urlparse import urlparse\n\nurl = demisto.get(demisto.args(),'url')\n\
  if not url:\n    demisto.results( { \"Type\" : entryTypes[\"error\"], \"ContentsFormat\"\
  \ : formats[\"text\"], \"Contents\" : \"URL must be provided\" } )\n    sys.exit()\n\
  \ntry:\n    url_obj = urlparse(url)\n    hostname = url_obj.hostname\n\n    ec =\
  \ {\"Domain(val.Name == obj.Name)\": {\"Name\": hostname}}\n    md = \"Domain: {}\"\
  .format(hostname)\n    demisto.results( { \"Type\" : entryTypes[\"note\"], \"ContentsFormat\"\
  \ : formats[\"text\"], \"Contents\" : md, \"HumanReadable\": md, \"EntryContext\"\
  : ec } )\nexcept:\n    demisto.results( { \"Type\" : entryTypes[\"error\"], \"ContentsFormat\"\
  \ : formats[\"text\"], \"Contents\" : \"Error while trying to parse URL\" } )\n\n"
scripttarget: 0
subtype: python2
system: true
tags:
- url
- domain
toversion: 4.1.9
type: python
