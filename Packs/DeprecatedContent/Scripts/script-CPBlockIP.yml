args:
- default: true
  description: One or more IP addresses to be blocked (comma-separated)
  name: ip
  required: true
- description: Whether to block traffic "to" or "from" the IPs, or "both". Default
    is "both".
  name: direction
- description: Base name for added rules inside checkpoint db
  name: rulename
- description: Base name for added ip/hosts inside checkpoint db
  name: ipname
comment: Block one or more IP addresses using Checkpoint Firewall.
commonfields:
  id: CPBlockIP
  version: -1
dependson:
  must:
  - checkpoint
deprecated: true
enabled: true
name: CPBlockIP
runonce: false
script: "from time import sleep\ndef runCheck(cmd, args):\n    err = []\n    r = demisto.executeCommand(cmd,\
  \ args)\n    if isError(r[0]):\n        myErrorText = 'Encountered error while running\
  \ command ' + cmd + ' with args ' + str(args)\n        err.append( { \"Type\" :\
  \ entryTypes[\"error\"], \"ContentsFormat\" : formats[\"text\"], \"Contents\" :\
  \ myErrorText } )\n        err += r\n        return err\n    else:\n        return\
  \ r\n\ndef doPublish():\n    demisto.executeCommand(\"checkpoint\", {'command':\
  \ 'publish'})\n\n\nDEBUGMODE = demisto.get(demisto.args(), 'dbg')\nres = []\ndbg\
  \ = []\nips = argToList(demisto.args()['ip'])\ndirection = demisto.get(demisto.args(),\
  \ 'direction')\nif not direction:\n    direction = 'both'\n\nif not demisto.get(demisto.args(),\
  \ 'rulename'):\n    demisto.args()['rulename'] = 'ip' + demisto.args()['ip'] + '\
  \ blocked in direction ' + direction\n\nif not demisto.get(demisto.args(), 'ipname'):\n\
  \    demisto.args()['ipname'] = demisto.args()['ip'] + ' . ' + direction\n\ni =\
  \ 1\nblocked = []\nif not ips:\n    demisto.results( { \"Type\" : entryTypes[\"\
  error\"], \"ContentsFormat\" : formats[\"text\"], \"Contents\" : 'No IP addresses\
  \ specified.' } )\nelse:\n    for ip in ips:\n        #name = '-'.join([demisto.args()['ipname'],\
  \ ip])\n        ruleName = demisto.args()['rulename'] + '-' + str(i)\n        dbg\
  \ += runCheck(\"checkpoint\", {'command': 'add-host', 'name': ip, 'ip-address':\
  \ ip})\n        doPublish()\n        if direction in ['both', 'from']:\n       \
  \     dbg += runCheck(\"checkpoint\", {'command': 'add-access-rule',\n         \
  \                                                'name': ruleName + '-from-' + ip,\n\
  \                                                         'position': '1',\n   \
  \                                                      'layer': 'Network',\n   \
  \                                                      'source': ip,\n         \
  \                                                'destination': 'ANY',\n       \
  \                                                  'service': 'any',\n         \
  \                                                'action': 'drop'\n            \
  \                                             })\n            doPublish()\n    \
  \    if direction in ['both', 'to']:\n            dbg += runCheck(\"checkpoint\"\
  , {'command': 'add-access-rule',\n                                             \
  \            'name': ruleName + '-to-' + ip,\n                                 \
  \                        'position': '1',\n                                    \
  \                     'layer': 'Network',\n                                    \
  \                     'source': 'ANY',\n                                       \
  \                  'destination': ip,\n                                        \
  \                 'service': 'any',\n                                          \
  \               'action': 'drop'\n                                             \
  \            })\n            doPublish()\n        blocked.append(ip)\n        i\
  \ += 1\n    alreadyBlocked = demisto.get(demisto.context(), 'BlockedIPs')\n    if\
  \ alreadyBlocked:\n        demisto.setContext('BlockedIPs', alreadyBlocked + ','\
  \ + ','.join(blocked))\n    else:\n        demisto.setContext('BlockedIPs', ','.join(blocked))\n\
  \    res.append( { \"Type\" : entryTypes[\"note\"], \"ContentsFormat\" : formats[\"\
  text\"], \"Contents\" : \"Blocked IP addresses \" + ', '.join(blocked) })\nif DEBUGMODE:\n\
  \    demisto.results(res + dbg)\nelse:\n    demisto.results(res)"
scripttarget: 0
subtype: python2
tags:
- checkpoint
- firewall
- response
tests:
- No tests
toversion: 4.1.9
type: python
