args:
- description: Name for the rule to be configured
  name: ruleName
- description: Usually not required as ruleName is sufficient. Direct XPath to the
    rule entry to be modified.
  name: xpath
- description: Source IP address
  name: srcIP
- description: Destination IP address
  name: dstIP
- description: Yes/No - whether to negate the source IP address (match all except
    the specified address)
  name: negateSrc
- description: Yes/No - whether to negate the destination IP address (match all except
    the specified address)
  name: negateDst
- description: Action for the rule
  name: action
- description: Service for the rule
  name: service
- description: Yes/No - whether to disable the rule
  name: disable
- description: Application for the rule
  name: application
- description: Source user for the rule
  name: srcUser
- description: '"From" value for the rule'
  name: from
- description: '"To" value for the rule'
  name: to
- description: Value for the "disable-server-response-inspection" option
  name: disableServerResponseInspection
- description: Rule description
  name: description
comment: Set panorama configuration
commonfields:
  id: PanoramaConfig
  version: -1
dependson:
  must:
  - panorama
deprecated: true
name: PanoramaConfig
script: "function AddArgumentOpen(arg, fieldName, member) {\n    if (arg) {\n    \
  \    if (member) {\n            return '<'+fieldName+'><member>' + arg+ '</member></'+fieldName+'>';\n\
  \        } else {\n            return '<'+fieldName+'>' + arg + '</'+fieldName+'>';\n\
  \        }\n    }\n    return '';\n}\nfunction AddArgumentYesNo(arg, fieldName)\
  \ {\n    if (arg  !== undefined) {\n            return '<'+fieldName+'>' + (arg\
  \ ? 'yes' : 'no') + '</'+fieldName+'>';\n        }\n    return '';\n}\nvar req =\
  \ {\n        type: 'config',\n        action: 'set',\n        key: 'keyvalue',\n\
  \        xpath: args.xpath || '/config/devices/entry/vsys/entry/rulebase/security/rules/entry[@name=\\\
  '' + args.ruleName +'\\']',\n        element: AddArgumentOpen(args.action, 'action')\
  \ +\n        AddArgumentOpen(args.description, 'description') +\n            AddArgumentOpen(args.srcIP,\
  \ 'source', true) +\n            AddArgumentOpen(args.dstIP, 'destination', true)\
  \ +\n            AddArgumentOpen(args.application, 'application', true) +\n    \
  \        AddArgumentOpen(args.srcUser, 'source-user', true) +\n            AddArgumentOpen(args.from,\
  \ 'from', true) +\n            AddArgumentOpen(args.to, 'to', true) +\n        \
  \    AddArgumentOpen(args.service, 'service', true) +\n            AddArgumentYesNo(args.negateSrc,\
  \ 'negate-source') +\n            AddArgumentYesNo(args.negateDst, 'negate-destination')\
  \ +\n            AddArgumentYesNo(args.disable, 'disabled') +\n            AddArgumentYesNo(args.disableServerResponseInspection,\
  \ 'disable-server-response-inspection')\n    };\nvar raw = executeCommand('panorama',\
  \ req);\nreturn raw[0].Contents.response['-status'];"
scripttarget: 0
system: true
tags:
- panorama
- firewall
tests:
- palo_alto_firewall_test_pb
timeout: 0s
toversion: 4.1.9
type: javascript
