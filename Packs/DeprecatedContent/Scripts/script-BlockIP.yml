args:
- default: true
  description: IP to block
  name: ip
  required: true
- description: Rule name
  name: rulename
- auto: PREDEFINED
  description: Direction to block (to, from or both - default)
  name: direction
  predefined:
  - to
  - from
  - both
  required: true
- description: Base name for added ip/hosts inside checkpoint db
  name: ipname
comment: Blocks IP in configured firewall
commonfields:
  id: BlockIP
  version: -1
dependson:
  should:
  - panorama
  - checkpoint
deprecated: true
enabled: true
name: BlockIP
runonce: false
script: "var blockPanorama = !!executeCommand('IsIntegrationAvailable',{'brandname':\
  \ 'panorama'})[0].Contents;\nvar blockCP = !!executeCommand('IsIntegrationAvailable',{'brandname':\
  \ 'check point'})[0].Contents;\n\nif (args['using-brand']) {\n    switch (args['using-brand'].toLowerCase())\
  \ {\n        case 'panorama':\n            blockCP = false;\n            break;\n\
  \        case 'check point':\n            blockPanorama = false;\n            break;\n\
  \    }\n}\n\nif (!args.rulename) {\n    args.rulename = 'ip' + args.ip + ' blocked\
  \ in direction ' + args.direction;\n}\n\nvar entries = [];\nif (blockPanorama) {\n\
  \    entries.push(executeCommand('PanoramaBlockIP', args));\n}\n\nif (blockCP) {\n\
  \    if (!args.ipname) {\n        args.ipname = + args.ip + ' . ' + args.direction;\n\
  \    }\n    entries.push(executeCommand('CPBlockIP', args));\n}\n\nreturn entries;"
scripttarget: 0
tags:
- firewall
- checkpoint
- panorama
tests:
- No tests
toversion: 4.1.9
type: javascript
