args:
- default: true
  description: Sensor ID (or a comma-separated list of IDs)
  name: sensorId
  required: true
- description: The observation ID (or a comma-separated list of IDs)
  name: id
  required: true
comment: Display information about the PCAPs related to the specified ProtectWise
  Observations.
commonfields:
  id: PWObservationPcapInfo
  version: -1
dependson:
  must:
  - ProtectWise|||observation-pcap-info
deprecated: true
name: PWObservationPcapInfo
script: "res = []\ninfos = []\ndArgs = demisto.args()\ndArgs[\"using-brand\"] = \"\
  ProtectWise\"\nobIDs = argToList(demisto.get(dArgs, 'id'))\nsensorList = argToList(demisto.get(dArgs,\
  \ 'sensorId'))\nfor sensorId in sensorList:\n    dArgs['sensorId'] = sensorId\n\
  \    for oid in obIDs:\n        dArgs['id'] = oid\n        resCmd = demisto.executeCommand(\"\
  observation-pcap-info\", dArgs)\n        try:\n            for entry in resCmd:\n\
  \                if isError(entry):\n                    res = resCmd\n        \
  \            break\n                else:\n                    myData = demisto.get(entry,\
  \ 'Contents')\n                    if myData and isinstance(myData, dict):\n   \
  \                     for field in myData:\n                            myData[field]\
  \ = formatCell(myData[field])\n                        infos += [myData]\n     \
  \               else:\n                        res.append({\"Type\": entryTypes[\"\
  error\"], \"ContentsFormat\": formats[\"text\"],\n                             \
  \       \"Contents\": \"Could not extract result list from response: \" + json.dumps(entry[\"\
  Contents\"], indent = 4)})\n        except Exception as ex:\n            res.append({\"\
  Type\": entryTypes[\"error\"], \"ContentsFormat\": formats[\"text\"],\n        \
  \                \"Contents\": \"Error occurred while parsing output from command.\
  \ Exception info:\\n\" + str(ex) + \"\\n\\nInvalid output:\\n\" + str(resCmd)})\n\
  res.append({\"Type\": entryTypes[\"note\"], \"ContentsFormat\": formats[\"table\"\
  ], \"Contents\": infos})\ndemisto.results(res)\n"
scripttarget: 0
subtype: python2
system: true
tags:
- protectwise
timeout: 0s
toversion: 4.1.9
type: python
