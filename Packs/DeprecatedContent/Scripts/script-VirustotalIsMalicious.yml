args:
- default: true
  description: If provided, checks only files whose names are in the list. The names
    should be comma-separated.
  name: hash
  required: true
- description: If not set, uses default from Common / CommonUser thresholds[vtPositives]
  name: threshold
- description: Maximum retries if hit the rate limitation on the Virustotal key (will
    retry every 1min)
  name: retries
comment: Query Virustotal with a file hash
commonfields:
  id: dbbdc2e4-6105-4ee9-8e83-563a4b991a89
  version: -1
dependson:
  must:
  - VirusTotal|||file
deprecated: true
name: VirustotalIsMalicious
script: "from time import sleep\nthreshold = int(demisto.args()['threshold']) if 'threshold'\
  \ in demisto.args() else 3\nretries = int(demisto.args()['retries']) if 'retries'\
  \ in demisto.args() else 10\nh = demisto.args()['hash']\n\nres = []\nresp = demisto.executeCommand('file',\
  \ {'file': h, 'using-brand': 'virustotal'})\n\n# Handle VT rate limit\nif isError(resp[0])\
  \ and '204 (No Content)' in resp[0]['Contents']:\n    tries = 0\n    while isError(resp[0])\
  \ and '204 (No Content)' in resp[0]['Contents'] and tries < retries:\n        tries\
  \ += 1\n        demisto.log('[*] Encountered VirusTotal Free API key rate limit.\
  \ Waiting 1 minute and trying again.')\n        sleep(60)\n        resp = demisto.executeCommand('file',\
  \ {'file': h, 'using-brand': 'virustotal'})\n    if tries > 0:\n        demisto.log\
  \ ('[**] Waited '  + str(tries) + ' minutes to query VirusTotal for ' + h + '.')\n\
  \n# If result is still an error, handle that\nif isError(resp[0]):\n    if 'The\
  \ requested resource is not among the finished, queued or pending scans' in resp[0]['Contents']:\n\
  \        demisto.results('Virustotal contains no results for hash ' + h + '.')\n\
  \    else:\n        demisto.results(resp)\n\nelse:\n    data = demisto.get(resp[0],\
  \ 'Contents')\n    if data:\n        if data['positives'] > threshold:\n       \
  \     res.append('yes')\n        else:\n            res.append('no')\n        del\
  \ data['response_code']\n        scans = data.pop('scans')\n        scanTable =\
  \ []\n        for s in scans:\n            d = scans[s].copy()\n            if d.pop('detected'):\n\
  \                d['Source'] = s\n                scanTable.append(d)\n        res\
  \ += [{ \"Type\" : entryTypes[\"note\"], \"ContentsFormat\" : formats[\"table\"\
  ], \"Contents\" : data } ]\n        res += [{ \"Type\" : entryTypes[\"note\"], \"\
  ContentsFormat\" : formats[\"table\"], \"Contents\" : scanTable }]\n\n    else:\n\
  \        res.append('No results.')\n    demisto.results(res)"
scripttarget: 0
subtype: python2
system: true
tags:
- virustotal
timeout: 0s
toversion: 4.1.9
type: python
