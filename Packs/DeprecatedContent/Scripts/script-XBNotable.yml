args:
- description: Maximum number of result rows to return
  name: rows
- description: Number of days back to include in results
  name: days
comment: This script is deprecated. Use the Exabeam integration instead.
commonfields:
  id: XBNotable
  version: -1
dependson:
  must:
  - xb-notable
deprecated: true
name: XBNotable
script: "import time\nrows = '100'\nif demisto.args().has_key('rows'):\n    rows =\
  \ demisto.args()['rows']\ndays = '1'\nif demisto.args().has_key('days'):\n    days\
  \ = demisto.args()['days']\nres = '## Exabeam notable users'\nentry = demisto.executeCommand('xb-notable',\
  \ {'numberOfResults': rows, 'num': days})[0]\nif entry['Type'] != entryTypes['error']\
  \ and entry['ContentsFormat'] == formats['json']:\n    users = demisto.get(entry,\
  \ 'Contents.users')\n    if users:\n        res += '\\n### Total in the last ' +\
  \ days + ' days: ' + str(len(users))\n        for user in users:\n            info\
  \ = demisto.get(user, 'user.info')\n            if info:\n                res +=\
  \ '\\n\\n\\n![photo](data:image/png;base64,' +  demisto.get(info, 'photo').replace('\\\
  n', '') + ')'\n                res += '\\n|Account|Email|Name|Title|Department|Devision|DN|Location|Manager|Office|Cell|Group|First\
  \ Seen|Last Seen|'\n                res += '\\n|-------|-----|----|-----|----------|--------|--|--------|-------|------|----|-----|----------|---------|'\n\
  \                res += '\\n| ' + demisto.get(info, 'accountId') + ' | ' + demisto.get(info,\
  \ 'email') + ' | ' + demisto.get(info, 'fullName') + ' | ' + \\\n              \
  \         demisto.get(info, 'title') + ' | ' + demisto.get(info, 'department') +\
  \ ' | ' + demisto.get(info, 'division') + ' | ' + \\\n                       demisto.get(info,\
  \ 'dn') + ' | ' + demisto.get(info, 'location') + ', ' + demisto.get(info, 'country')\
  \ + ' | ' + \\\n                       demisto.get(info, 'manager') + ' | ' + demisto.get(info,\
  \ 'phoneOffice') + ' | ' + demisto.get(info, 'phoneCell') + ' | ' + \\\n       \
  \                demisto.get(info, 'group') + ' | ' + time.ctime(demisto.get(user,\
  \ 'user.firstSeen') / 1000.0) + ' | ' + time.ctime(demisto.get(user, 'user.lastSeen')\
  \ / 1000.0) + ' |'\n            res += '\\nScore: **' + str(demisto.get(user, 'highestRiskScore'))\
  \ + '**'\n            res += '\\nHighest Risk Session:'\n            res += '\\\
  n|ID|Accounts|Start|End|Label|LoginHost|Zones|InitialRisk|Risk|Assets|Events|Reasons|SecurityEvents|'\n\
  \            res += '\\n|--|--------|-----|---|-----|---------|-----|-----------|----|------|------|-------|--------------|'\n\
  \            session = demisto.get(user, 'highestRiskSession')\n            if session:\n\
  \                res += '\\n| ' + demisto.get(session, 'sessionId') + ' | ' + ','.join(demisto.get(session,\
  \ 'accounts')) + ' | ' + time.ctime(demisto.get(session, 'startTime') / 1000.0)\
  \ + ' | ' + \\\n                       time.ctime(demisto.get(session, 'endTime')\
  \ / 1000.0) + ' | ' + demisto.get(session, 'label') + ' | ' + demisto.get(session,\
  \ 'loginHost') + ' | ' + \\\n                       ','.join(demisto.get(session,\
  \ 'zones')) + ' | ' + str(demisto.get(session, 'initialRiskScore')) + ' | ' + str(demisto.get(session,\
  \ 'riskScore')) + ' | ' + \\\n                       str(demisto.get(session, 'numOfAssets'))\
  \ + ' | ' + str(demisto.get(session, 'numOfEvents')) + ' | ' + str(demisto.get(session,\
  \ 'numOfReasons')) + ' | ' + \\\n                       str(demisto.get(session,\
  \ 'numOfSecurityEvents')) + ' |'\n    demisto.results({'ContentsFormat': formats['markdown'],\
  \ 'Type': entryTypes['note'], 'Contents': res})\nelse:\n    demisto.results(entry)"
scripttarget: 0
subtype: python2
system: true
tags:
- server
- analytics
- exabeam
timeout: 0s
toversion: 4.1.9
type: python
