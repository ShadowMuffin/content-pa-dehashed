args:
- default: true
  description: userKey - Identifies the user in the API request. The value can be
    the user's primary email address, alias email address, or unique user ID.
  name: userKey
  required: true
- description: The ID of the message to retrieve
  name: messageId
  required: true
- description: Fields allows partial responses to be retrieved. See https://developers.google.com/gdata/docs/2.0/basics#PartialResponse
    for more information. (comma separated list)
  name: fields
- auto: PREDEFINED
  description: 'The format to return the message in. Acceptable values are: "full":
    Returns the full email message data with body content parsed in the payload field;
    the raw field is not used. (default) / "metadata": Returns only email message
    ID, labels, and email headers / "minimal": Returns only email message ID and labels;
    does not return the email headers, body, or payload / "raw": Returns the full
    email message data with body content in the raw field as a base64url encoded string;
    the payload field is not used'
  name: format
comment: Gets the specified message.
commonfields:
  id: GoogleappsGmailGetMail
  version: -1
dependson:
  must:
  - googleapps-gmail-get-mail
deprecated: true
name: GoogleappsGmailGetMail
script: "\nimport re\n\nargs = demisto.args()\nfor key in args.keys():\n    args[re.sub(r'([A-Z])',lambda\
  \ x:'-'+x.group(1).lower(),key)] = args.pop(key)\nresp = demisto.executeCommand(\"\
  googleapps-gmail-get-mail\", args)\n\nif isError(resp[0]):\n    demisto.results(resp)\n\
  else:\n    data = demisto.get(resp[0], \"Contents\")\n    if data:\n        data\
  \ = data if isinstance(data, list) else [data]\n        data = [{k: formatCell(row[k])\
  \ for k in row} for row in data]\n        demisto.results({\"ContentsFormat\": formats[\"\
  table\"], \"Type\": entryTypes[\"note\"], \"Contents\": data} )\n    else:\n   \
  \     demisto.results(\"No results.\")\n"
scripttarget: 0
subtype: python2
system: true
tags:
- google apps
timeout: 0s
toversion: 4.1.9
type: python
