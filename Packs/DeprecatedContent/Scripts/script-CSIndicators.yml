args:
- default: true
  description: 'Based on what parameter to search.

    See CrowdStrike documentation for details.

    Can be one of indicator, type, report, actor, malicious_confidence, published_date,
    last_updated, malware_family, kill_chain, labels, DomainType, EmailAddressType,
    IntelNews, IPAddressType, Malware, Status, Target, ThreatType, Vulnerability'
  name: parameter
  required: true
- description: Can be either match, equal, gt(e), lt(e)
  name: filter
  required: true
- description: The value for the given parameter
  name: value
  required: true
- description: Sort by a field. Should be field_name.order where order is either asc
    or desc. Fields are indicator, type, report, actor, malicious_confidence, published_date,
    last_updated.
  name: sort
- description: The page to retrieve - 1 based
  name: page
- description: The size of the page to retrieve
  name: pageSize
comment: Query CrowdStrike indicators based on given parameters.
commonfields:
  id: CSIndicators
  version: -1
dependson:
  must:
  - cs-indicators
deprecated: true
name: CSIndicators
script: "import time\ndef formatDate(t):\n    if t:\n        return time.ctime(t)\n\
  \    return ''\ndef formatLabels(labels):\n    res = ''\n    first = True\n    if\
  \ labels:\n        for l in labels:\n            if first:\n                first\
  \ = False\n            else:\n                res += ', '\n            res += demisto.gets(l,\
  \ 'name')\n    return res\nres = '## CrowdStrike Falcon Intelligence'\nentry = demisto.executeCommand('cs-indicators',\
  \ demisto.args())[0]\nif entry['Type'] != entryTypes['error'] and entry['ContentsFormat']\
  \ == formats['json']:\n    indicators = demisto.get(entry, 'Contents')\n    if indicators:\n\
  \        res += '\\n\\n### Indicators'\n        res += '\\n|Indicator|Type|Published|Updated|Confidence|Reports|Actors|Malware\
  \ Families|Kill Chains|Domain Types|IP Address Types|Labels|'\n        res += '\\\
  n|---------|----|---------|-------|----------|-------|------|----------------|-----------|------------|----------------|------|'\n\
  \        for i in indicators:\n            res += '\\n| ' + demisto.gets(i, 'indicator')\
  \ + ' | ' + demisto.gets(i, 'type') + ' | ' + formatDate(demisto.get(i, 'published_date'))\
  \ + ' | ' + \\\n                   formatDate(demisto.get(i, 'last_updated')) +\
  \ ' | ' + demisto.gets(i, 'malicious_confidence') + ' | ' + ','.join(demisto.get(i,\
  \ 'reports')) + ' | ' + \\\n                   ','.join(demisto.get(i, 'actors'))\
  \ + ' | ' + ','.join(demisto.get(i, 'malware_families')) + ' | ' + ','.join(demisto.get(i,\
  \ 'kill_chains')) + ' | ' + \\\n                   ','.join(demisto.get(i, 'domain_types'))\
  \ + ' | ' + ','.join(demisto.get(i, 'ip_address_types')) + ' | ' + formatLabels(demisto.get(i,\
  \ 'labels')) + ' |'\n    demisto.results({'ContentsFormat': formats['markdown'],\
  \ 'Type': entryTypes['note'], 'Contents': res})\nelse:\n    demisto.results(entry)"
scripttarget: 0
subtype: python2
system: true
tags:
- server
- threat-intel
- crowdstrike
timeout: 0s
toversion: 4.1.9
type: python
