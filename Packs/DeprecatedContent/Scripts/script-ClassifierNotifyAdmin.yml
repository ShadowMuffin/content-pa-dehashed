args:
- default: true
  description: 'Mail address to notify '
  name: sendTo
comment: This script is deprecated. See https://xsoar.pan.dev/docs/reference/playbooks/d-bot-create-phishing-classifier-v2
  for more information.
commonfields:
  id: ClassifierNotifyAdmin
  version: -1
dependson:
  must:
  - send-mail
deprecated: true
name: ClassifierNotifyAdmin
script: "BRAND_LABEL = 'Label/Brand'\nCLASSIFIER_DESCRIPTION_LABAL = 'Label/Classifier/Description'\n\
  INCIDENT_ID_LABEL = 'Label/id'\nCONTEXT_SEPARATOR = '|'\n\nMAIL_SUBJECT = 'Demisto\
  \ warning: Failed to classify incident {0}'\n\nctx = demisto.context()\nres = []\n\
  \nbrand = demisto.get(ctx, BRAND_LABEL) or ''\ndescription = demisto.get(ctx, CLASSIFIER_DESCRIPTION_LABAL)\
  \ or ''\nincident_id = demisto.get(ctx, INCIDENT_ID_LABEL) or ''\nsend_to = demisto.args()['sendTo']\
  \ if demisto.get(demisto.args(), 'sendTo') else ''\n\nmarkdownString = '### Classification\
  \ failed:\\n'\nmarkdownString += '* Brand: {0}\\n'.format(brand) if brand else '*\
  \ Brand was not provided\\n'\nmarkdownString += '* Description:\\n{0}'.format(''.join(['**\
  \ {0}\\n'.format(st) for st in description.split(CONTEXT_SEPARATOR)])) if description\
  \ else '* Description was not provided\\n'\n\nres.append({'ContentsFormat': formats['markdown'],\
  \ 'Type': entryTypes['note'], 'Contents': markdownString})\n\nif send_to:\n    resp\
  \ = demisto.executeCommand(\"send-mail\", {\"to\" : send_to, \"subject\" : MAIL_SUBJECT.format(incident_id),\
  \ \"body\" : markdownString})\n    if isError(resp[0]):\n        res += resp\n\n\
  demisto.results(res)"
scripttarget: 0
subtype: python2
system: true
tags:
- Classifier
timeout: 0s
toversion: 4.1.9
type: python
