args:
- description: Maximum number of result rows to return
  name: rows
- description: Number of days back to include in results
  name: days
comment: This script is deprecated. Use the Exabeam integration instead.
commonfields:
  id: XBLockouts
  version: -1
dependson:
  must:
  - xb-lockouts
deprecated: true
name: XBLockouts
script: "import time\nrows = '100'\nif demisto.args().has_key('rows'):\n    rows =\
  \ demisto.args()['rows']\ndays = '1'\nif demisto.args().has_key('days'):\n    days\
  \ = demisto.args()['days']\nres = '## Exabeam Lockouts'\nentry = demisto.executeCommand('xb-lockouts',\
  \ {'numberOfResults': rows, 'num': days})[0]\nif entry['Type'] != entryTypes['error']\
  \ and entry['ContentsFormat'] == formats['json']:\n    lockouts = demisto.get(entry,\
  \ 'Contents.lockouts')\n    if lockouts:\n        res += '\\n### Total in the last\
  \ ' + days + ' days: ' + str(len(lockouts))\n        for l in lockouts:\n      \
  \      info = demisto.get(l, 'user.info')\n            if info:\n              \
  \  res += '\\n\\n\\n![photo](data:image/png;base64,' +  demisto.get(info, 'photo').replace('\\\
  n', '') + ')'\n                res += '\\n|Account|Email|Name|Title|Department|Devision|DN|Location|Manager|Office|Cell|Group|First\
  \ Seen|Last Seen|'\n                res += '\\n|-------|-----|----|-----|----------|--------|--|--------|-------|------|----|-----|----------|---------|'\n\
  \                res += '\\n| ' + demisto.get(info, 'accountId') + ' | ' + demisto.get(info,\
  \ 'email') + ' | ' + demisto.get(info, 'fullName') + ' | ' + \\\n              \
  \         demisto.get(info, 'title') + ' | ' + demisto.get(info, 'department') +\
  \ ' | ' + demisto.get(info, 'division') + ' | ' + \\\n                       demisto.get(info,\
  \ 'dn') + ' | ' + demisto.get(info, 'location') + ', ' + demisto.get(info, 'country')\
  \ + ' | ' + \\\n                       demisto.get(info, 'manager') + ' | ' + demisto.get(info,\
  \ 'phoneOffice') + ' | ' + demisto.get(info, 'phoneCell') + ' | ' + \\\n       \
  \                demisto.get(info, 'group') + ' | ' + time.ctime(demisto.get(l,\
  \ 'user.firstSeen') / 1000.0) + ' | ' + time.ctime(demisto.get(l, 'user.lastSeen')\
  \ / 1000.0) + ' |'\n            res += '\\nScore: **' + str(demisto.get(l, 'user.riskScore'))\
  \ + '**'\n            res += '\\n|ID|Accounts|Start|End|Label|LoginHost|Zones|InitialRisk|Risk|Last\
  \ Activity Type|Last Activity Time|Account Changes|Account Lockouts|Assets|Events|Failed\
  \ Logins|Reasons|'\n            res += '\\n|--|--------|-----|---|-----|---------|-----|-----------|----|------------------|------------------|---------------|----------------|------|------|-------------|-------|'\n\
  \            lInfo = demisto.get(l, 'lockoutInfo')\n            if lInfo:\n    \
  \            res += '\\n| ' + demisto.get(lInfo, 'lockoutId') + ' | ' + ','.join(demisto.get(lInfo,\
  \ 'accounts')) + ' | ' + time.ctime(demisto.get(lInfo, 'startTime') / 1000.0) +\
  \ ' | ' + \\\n                       time.ctime(demisto.get(lInfo, 'endTime') /\
  \ 1000.0) + ' | ' + demisto.get(lInfo, 'label') + ' | ' + demisto.get(lInfo, 'loginHost')\
  \ + ' | ' + \\\n                       ','.join(demisto.get(lInfo, 'zones')) + '\
  \ | ' + str(demisto.get(lInfo, 'initialRiskScore')) + ' | ' + str(demisto.get(lInfo,\
  \ 'riskScore')) + ' | ' + \\\n                       str(demisto.get(lInfo, 'lastActivityType'))\
  \ + ' | ' + time.ctime(demisto.get(lInfo, 'lastActivityTime') / 1000.0) + ' | '\
  \ + \\\n                       str(demisto.get(lInfo, 'numOfAccountChanges')) +\
  \ ' | ' + str(demisto.get(lInfo, 'numOfAccountLockouts')) + ' | ' + \\\n       \
  \                str(demisto.get(lInfo, 'numOfAssets')) + ' | ' + str(demisto.get(lInfo,\
  \ 'numOfEvents')) + ' | ' + str(demisto.get(lInfo, 'numOfFailedLogins')) + ' | '\
  \ + \\\n                       str(demisto.get(lInfo, 'numOfReasons')) + ' |'\n\
  \    demisto.results({'ContentsFormat': formats['markdown'], 'Type': entryTypes['note'],\
  \ 'Contents': res})\nelse:\n    demisto.results(entry)"
scripttarget: 0
subtype: python2
system: true
tags:
- server
- analytics
- exabeam
timeout: 0s
toversion: 4.1.9
type: python
