args:
- default: true
  description: ' (mandatory) Query the AD in AD syntax. E.g. "(&(objectCategory=person)(objectClass=user)(!(cn=andy)))"
    will find all user objects except andy'
  name: filter
  required: true
- description: Root
  name: baseDn
- description: Specify what fields will be returned (comma separated)
  name: attributes
- description: Max number of returned records
  name: sizeLimit
- description: Max time of query response in seconds
  name: timeLimit
comment: Run Active Directory queries
commonfields:
  id: AdSearch
  version: -1
dependson:
  must:
  - ad-search
deprecated: true
name: AdSearch
script: "dArgs = demisto.args()\ndApiArgs = {}\n\nif demisto.get(dArgs, 'filter'):\n\
  \    dApiArgs['filter'] = dArgs['filter']\nif demisto.get(dArgs, 'baseDn'):\n  \
  \  dApiArgs['base-dn'] = dArgs['baseDn']\nif demisto.get(dArgs, 'attributes'):\n\
  \    dApiArgs['attributes'] = dArgs['attributes']\nif demisto.get(dArgs, 'sizeLimit'):\n\
  \    dApiArgs['size-limit'] = dArgs['sizeLimit']\nif demisto.get(dArgs, 'timeLimit'):\n\
  \    dApiArgs['time-limit'] = dArgs['timeLimit']\n\nresp = demisto.executeCommand('ad-search',\
  \ demisto.args());\n\nif isError(resp[0]):\n    demisto.results(resp)\nelse:\n \
  \   data = demisto.get(resp[0], \"Contents\")\n    if data:\n        data = data\
  \ if isinstance(data, list) else [data]\n        data = [{k: formatCell(row[k])\
  \ for k in row} for row in data]\n        demisto.results({\"ContentsFormat\": formats[\"\
  table\"], \"Type\": entryTypes[\"note\"], \"Contents\": data} )\n    else:\n   \
  \     demisto.results(\"No results.\")"
scripttarget: 0
subtype: python2
system: true
tags:
- active directory
timeout: 0s
toversion: 4.1.9
type: python
