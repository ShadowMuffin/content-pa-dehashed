args:
- default: true
  description: Task UUIDs
  name: taskIDs
  required: true
comment: Shows status of a checkpoint task by task uuid.
commonfields:
  id: CPTaskStatus
  version: -1
dependson:
  must:
  - checkpoint
deprecated: true
name: CPTaskStatus
script: "res = []\ntaskIds = demisto.get(demisto.args(), 'taskIDs')\nif type(taskIds)\
  \ in [str, unicode]:\n    taskIds = taskIds.split(',') if ',' in taskIds else [taskIds]\n\
  dArgs = {'command':'show-task'}\n\nrows = []\nfor tid in taskIds:\n    dArgs[\"\
  task-id\"] = tid\n    resCmd = demisto.executeCommand('checkpoint', dArgs)\n   \
  \ try:\n        for entry in resCmd:\n            if isError(entry):\n         \
  \       res = resCmd\n                break\n            else:\n               \
  \ tasks = demisto.get(entry, 'Contents.tasks')\n                if tasks:\n    \
  \                rows += tasks\n                else:\n                    res.append({\"\
  Type\": entryTypes[\"error\"], \"ContentsFormat\": formats[\"text\"],\n        \
  \                        \"Contents\": \"Could not extract result list from response:\
  \ \" + json.dumps(entry[\"Contents\"])})\n    except Exception as ex:\n        res.append({\"\
  Type\": entryTypes[\"error\"], \"ContentsFormat\": formats[\"text\"],\n        \
  \            \"Contents\": \"Error occurred while parsing output from command. Exception\
  \ info:\\n\" + str(ex) + \"\\n\\nInvalid output:\\n\" + str(resCmd)})\nres.append({\"\
  Type\": entryTypes[\"note\"], \"ContentsFormat\": formats[\"table\"], \"Contents\"\
  : rows})\ndemisto.results(res)\n"
scripttarget: 0
subtype: python2
system: true
tags:
- checkpoint
timeout: 0s
toversion: 4.1.9
type: python
