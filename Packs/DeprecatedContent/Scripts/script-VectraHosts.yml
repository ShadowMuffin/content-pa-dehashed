args:
- description: Filters objects listed
  name: fields
- description: Page number. Possible values are a positive integer or last
  name: page
- description: Page size. Possible values are a positive integer or all
  name: page_size
- description: "Orders records by last timestamp, threat score and certainty score.\
    \ The default out sorts threat and certainty score in ascending order. Scores\
    \ can sorted in descending order by prepending the query with \u201Cminus\u201D\
    \ symbol"
  name: ordering
- description: filter by name
  name: name
- description: 'filter by state: active, inactive, suspended, ignored, ignored4all'
  name: state
- description: filter by last_source (ip address)
  name: last_source
- description: filter by threat score
  name: t_score
- description: filter by threat score >= the score provided
  name: t_score_gte
- description: filter by certainty score
  name: c_score
- description: The current certainty score integer correlated to this host
  name: c_score
- description: filter by certainty score >= the score provided
  name: c_score_gte
- description: filter by last_detection_timestamp
  name: last_detection_timestamp
- description: filter by a tag or a comma-separated list of tags (returns hosts that
    contain any of the tags specified), e.g.tags=baz | tags=foo,bar"
  name: tags
- description: 'filter by key asset: True, False'
  name: key_assest
- description: filter by mac address
  name: mac_address
comment: Host information includes data that correlates the host data to detected
  security events
commonfields:
  id: VectraHosts
  version: -1
dependson:
  must:
  - vec-hosts
deprecated: true
name: VectraHosts
script: "keys = ['id','name','state','t_score','c_score','last_source','last_detection_timestamp','detection_set','url','tags','key_asset','new_host_pointer','sensor_luid','t_score','targets_key_asset']\n\
  resp = demisto.executeCommand(\"vec-hosts\", demisto.args())\n\nif isError(resp[0]):\n\
  \    demisto.results(resp)\nelse:\n    data = demisto.get(resp[0], \"Contents.results\"\
  )\n    if data:\n        data = data if isinstance(data, list) else [data]\n   \
  \     data = [{k: formatCell(row[k]).replace(\"\\n\",\"<br>\") for k in row} for\
  \ row in data]\n        data = tblToMd(\"Vectra Hosts\",data,keys)\n\n        demisto.results({\"\
  ContentsFormat\": formats[\"markdown\"], \"Type\": entryTypes[\"note\"], \"Contents\"\
  : data} )\n    else:\n        demisto.results(\"No results.\")\n"
scripttarget: 0
subtype: python2
system: true
tags:
- Vectra
timeout: 0s
toversion: 4.1.9
type: python
