args:
- default: true
  description: Event ID
  name: id
  required: true
comment: Retrieve details for a specific event from ProtectWise
commonfields:
  id: PWEventDetails
  version: -1
dependson:
  must:
  - pw-event-get
deprecated: true
name: PWEventDetails
script: "res = []\ndArgs = demisto.args()\ndArgs[\"using-brand\"] = \"ProtectWise\"\
  \n# TODO decide whether we want to support multiple events here, since each event\
  \ ID returns 3 tables. If yes - run pw-event-get for each ID as it seems it doesn't\
  \ support a csv of IDs\n#dArgs[\"id\"] = argToList(demisto.get(dArgs, 'id'))\n\n\
  resCmd = demisto.executeCommand(\"pw-event-get\", dArgs)\ntry:\n    for entry in\
  \ resCmd:\n        if isError(entry):\n            res = resCmd\n            break\n\
  \        else:\n            myData = demisto.get(entry, 'Contents')\n          \
  \  if myData and isinstance(myData, dict):\n                for subTableName in\
  \ ['observations', 'netflows']:\n                    subTable = myData.pop(subTableName,\
  \ None)\n                    if subTable:\n                        for item in subTable:\n\
  \                            for field in item:\n                              \
  \  item[field] = formatCell(item[field])\n                        res.append({\"\
  Type\": entryTypes[\"note\"], \"ContentsFormat\": formats[\"table\"], \"Contents\"\
  : subTable})\n                for field in myData:\n                    myData[field]\
  \ = formatCell(myData[field])\n                res.append({\"Type\": entryTypes[\"\
  note\"], \"ContentsFormat\": formats[\"table\"], \"Contents\": myData})\n      \
  \      else:\n                res.append({\"Type\": entryTypes[\"error\"], \"ContentsFormat\"\
  : formats[\"text\"],\n                            \"Contents\": \"Could not extract\
  \ result list from response: \" + json.dumps(entry[\"Contents\"], indent = 4)})\n\
  except Exception as ex:\n    res.append({\"Type\": entryTypes[\"error\"], \"ContentsFormat\"\
  : formats[\"text\"],\n                \"Contents\": \"Error occurred while parsing\
  \ output from command. Exception info:\\n\" + str(ex) + \"\\n\\nInvalid output:\\\
  n\" + str(resCmd)})\ndemisto.results(res)\n"
scripttarget: 0
subtype: python2
system: true
tags:
- protectwise
timeout: 0s
toversion: 4.1.9
type: python
