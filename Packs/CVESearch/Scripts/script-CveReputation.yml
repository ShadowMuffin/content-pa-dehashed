args:
- default: true
  description: CVE ID
  name: input
  required: true
comment: Provides severity of CVE based on CVSS score where available
commonfields:
  id: cveReputation
  version: -1
dependson:
  must:
  - cve
enabled: true
name: cveReputation
runonce: false
script: "var resCmd = executeCommand('cve', {'cve_id': args.input})[0];\nvar maxTries\
  \ = 5;\nvar counter = 0;\nwhile (isError(resCmd) && counter < maxTries) {\n    resCmd\
  \ = executeCommand('cve', {'cve_id': args.input})[0];\n    counter++;\n}\n\nif (isError(resCmd))\
  \ {\n    throw resCmd.Contents;\n}\n\nvar data = resCmd.Contents[0];\nvar key =\
  \ Object.keys(resCmd.EntryContext)[0]\nvar cvss = (data.cvss) ? parseInt(data.cvss)\
  \ : -1;\nvar res;\nif (cvss === -1) {\n    res = 0;\n} else if (cvss < 3) {\n  \
  \  res= 1;\n} else if (cvss < 7) {\n    res= 2;\n} else {\n    res= 3;\n}\n\nvar\
  \ result = {\n  Type: entryTypes.note,\n  Contents: res,\n  HumanReadable: res,\n\
  \  EntryContext:{'CVE':resCmd.EntryContext[key]}\n};\nreturn result\n"
scripttarget: 0
tags:
- cve
- reputation
timeout: "2.4\xB5s"
toversion: 4.1.9
type: javascript
