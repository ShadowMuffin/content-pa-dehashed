args:
- default: true
  description: Time in ticks
  name: ticks
  required: true
comment: 'Converting time in Ticks to readable time. Ticks are used to represent time
  by some vendors, most commonly by Microsoft. '
commonfields:
  id: ticksToTime
  version: -1
enabled: true
name: ticksToTime
script: "//get date in string\nvar getDateString = function(obj) {\n    var month\
  \ = \"0\" + obj.Month;\n    var day = \"0\" + obj.Day;\n    var hours = \"0\" +\
  \ obj.Hours;\n    var minutes = \"0\" + obj.Minutes;\n    var seconds = \"0\" +\
  \ obj.Seconds;\n    var strTime = obj.Year+'-'+month.substr(-2)+'-'+day.substr(-2)\
  \ + ' '+hours.substr(-2) +':'+ minutes.substr(-2) +':'+ seconds.substr(-2);\n  \
  \  return strTime;\n}\n\n//ticks are in nanotime; convert to millis\nvar ticksToMillis\
  \ = args.ticks / 10000;\n//ticks are recorded from 1/1/1601. this is mili diff\n\
  var epocDiff = -11644473600000;\n//create date object with the tick time\nvar tickDate\
  \ = new Date(Math.round(ticksToMillis + epocDiff));\n\nvar obj = {\n    Epoc: tickDate.getTime(),\n\
  \    UTC: {\n        Year: tickDate.getUTCFullYear(),\n        Month: tickDate.getUTCMonth()+1,\n\
  \        Day: tickDate.getUTCDate(),\n        Hours: tickDate.getUTCHours(),\n \
  \       Minutes: tickDate.getUTCMinutes(),\n        Seconds: tickDate.getUTCSeconds()\n\
  \    },\n    Local: {\n        Year: tickDate.getFullYear(),\n        Month: tickDate.getMonth()+1,\n\
  \        Day: tickDate.getDate(),\n        Hours: tickDate.getHours(),\n       \
  \ Minutes: tickDate.getMinutes(),\n        Seconds: tickDate.getSeconds()\n    }\n\
  };\nobj.UTC.Display = getDateString(obj.UTC);\nobj.Local.Display = getDateString(obj.Local);\n\
  \nreturn({'HumanReadable': obj.Local.Display,'ContentsFormat': formats.json, 'Type':\
  \ entryTypes['note'], 'Contents': obj});\n"
scripttarget: 0
tags:
- Utility
toversion: 4.1.9
type: javascript
