args:
- description: value to check if in range (e.g. 4)
  name: left
  required: true
- description: range to check against with the form of from,to (e.g. 2,8)
  name: right
  required: true
comment: 'checks if left side is in range of right side (from,to anotation)

  e.g. - InRange left=4right=1,8 will return true'
commonfields:
  id: InRange
  version: -1
enabled: true
name: InRange
runonce: false
script: "INVALID_ARG = \"INVALID_ARG\"\ndef to_float(s):\n    try:\n        return\
  \ float(s)\n    except:\n        return INVALID_ARG\n\n# \"1,8\" => will return\
  \ a tupple (1, 8)\ndef parse_range(rangeStr):\n    splitted = rangeStr.split(\"\
  ,\")\n    if len(splitted) < 2:\n        return INVALID_ARG, INVALID_ARG\n\n   \
  \ # parse\n    return to_float(splitted[0]), to_float(splitted[1])\n\nleftArg =\
  \ demisto.args()[\"left\"]\nrightArg = demisto.args()[\"right\"]\n\nleft = to_float(leftArg)\n\
  fromRange, toRange = parse_range(rightArg)\n\nif INVALID_ARG in [left, fromRange,toRange]:\n\
  \    demisto.error(\"InRange - invalid arguments. left shuld be a number, right\
  \ should be from,to (e.g. '1,8'). got left - %s, right - %s\" % (leftArg, rightArg))\n\
  \    demisto.results(False)\nelse:\n    demisto.results(left >= fromRange and left\
  \ <= toRange)\n\nsys.exit(0)\n"
scripttarget: 0
subtype: python2
tags:
- filter
- number
toversion: 4.1.9
type: python
