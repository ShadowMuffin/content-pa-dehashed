comment: Executes test for all integration instances available and returns a detailed
  table about failed integration instances
commonfields:
  id: FailedInstances
  version: -1
enabled: true
fromversion: 4.0.0
name: FailedInstances
outputs:
- contextPath: FailedInstances.instance
  description: Name of failed integration instance
  type: string
- contextPath: FailedInstances.brand
  description: Brand of failed integration instance
  type: string
- contextPath: FailedInstances.category
  description: Category of failed integration instance
  type: string
- contextPath: FailedInstances.information
  description: Error information about failed integration instance
  type: string
runonce: false
script: "var INTERNAL_MODULES_BRANDS = ['Scripts', 'Builtin'];\n\nvar failedInstances\
  \ = [];\nvar all = getModules();\n\nObject.keys(all).forEach(function(m) {\n   \
  \ if (all[m].state === 'active' && all[m].defaultIgnored !== 'true' && INTERNAL_MODULES_BRANDS.indexOf(all[m].brand)\
  \ === -1) {\n        var cmd = m.replace(/\\s/g,'_') + '-test-module';\n       \
  \ var firstRest = executeCommand(\"addEntries\", {\"entries\": JSON.stringify([{\n\
  \            Type: entryTypes.note,\n            Contents: 'testing **' + m + '**',\n\
  \            HumanReadable: 'testing **' + m + '**',\n            ContentsFormat:\
  \ formats.markdown\n        }])});\n\n        var res =  executeCommand(cmd, {});\n\
  \        executeCommand(\"addEntries\", {\"entries\": JSON.stringify([{\n      \
  \      Type: entryTypes.note,\n            Contents: 'done testing **' + m + '**:\\\
  n' + res[0].Contents,\n            HumanReadable: 'done testing **' + m + '**:\\\
  n' + res[0].Contents,\n            ContentsFormat: formats.markdown\n        }])});\n\
  \n        if (res[0].Type === entryTypes.error) {\n            failedInstances.push({instance:\
  \ m, brand: all[m].brand, category: all[m].category, information: res[0].Contents\
  \ });\n        }\n    }\n});\n\nvar hr;\nif (failedInstances.length === 0) {\n \
  \   hr = '### All active instances are available! \u2705';\n} else {\n    hr = tableToMarkdown('Failed\
  \ Instances:', failedInstances, ['instance', 'brand', 'category', 'information']);\n\
  }\n\nreturn {\n    Type: entryTypes.note,\n    Contents: failedInstances,\n    ContentsFormat:\
  \ formats.markdown,\n    HumanReadable: hr,\n    EntryContext: { FailedInstances:\
  \ failedInstances }\n};\n"
scripttarget: 0
system: true
tags: []
timeout: "10.8\xB5s"
toversion: 4.1.9
type: javascript
