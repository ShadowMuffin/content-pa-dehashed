args:
- description: Length of the string
  name: Length
  required: true
- auto: PREDEFINED
  description: If the string will include punctuation.
  name: Punctuation
  predefined:
  - 'True'
  - 'False'
  required: true
- auto: PREDEFINED
  description: If the string will include letters.
  name: Lowercase
  predefined:
  - 'True'
  - 'False'
  required: true
- auto: PREDEFINED
  description: if uppercase should be included
  name: Uppercase
  predefined:
  - 'True'
  - 'False'
  required: true
- auto: PREDEFINED
  description: If digits should be included
  name: Digits
  predefined:
  - 'True'
  - 'False'
  required: true
comment: Generates random string
commonfields:
  id: GenerateRandomString
  version: -1
enabled: true
name: GenerateRandomString
outputs:
- contextPath: RandomString
  description: The generated string.
  type: string
runonce: false
script: "import json\nimport string\nimport time\nimport random\n\ndef create_entry(title,data,\
  \ ec):\n    return {\n        'ContentsFormat': formats['json'],\n        'Type':\
  \ entryTypes['note'],\n        'Contents': data,\n        'ReadableContentsFormat':\
  \ formats['markdown'],\n        'HumanReadable': tableToMarkdown(title, data) if\
  \ data else 'No result were found',\n        'EntryContext': ec\n    }\n\n\ndef\
  \ create_error_entry(error):\n    return {\n        'Type' : entryTypes['error'],\n\
  \        'ContentsFormat' : formats['text'],\n        'Contents' : str(error)\n\
  \    }\n\n\nlength = int(demisto.args()[\"Length\"])\npunctuation = demisto.args()[\"\
  Punctuation\"]\nlowercase = demisto.args()[\"Lowercase\"]\nuppercase = demisto.args()[\"\
  Uppercase\"]\ndigits = demisto.args()[\"Digits\"]\n\ncharacters = \"\"\nif length\
  \ > 0:\n    if uppercase == \"True\" or lowercase == \"True\" or digits == \"True\"\
  \ or punctuation == \"True\":\n\n        if lowercase == \"True\":\n           \
  \ characters += string.ascii_lowercase\n\n        if uppercase == \"True\":\n  \
  \          characters += string.ascii_uppercase\n\n        if digits == \"True\"\
  :\n            characters += string.digits\n\n        if punctuation == \"True\"\
  :\n            characters += string.punctuation\n\n    else:\n        demisto.results(create_error_entry(\"\
  Punctuation,Digits,Uppercase or Lowercase must be True.\"))\n        sys.exit(0)\n\
  else:\n    demisto.results(create_error_entry(\"Length must be grather than 0.\"\
  ))\n    sys.exit(0)\n\npassword = \"\"\nfor x in range(0,length):\n    password\
  \ += random.SystemRandom(random.seed(time.time())).choice(characters)\n\nraw = {\"\
  RandomString\": password}\nraw = json.loads(json.dumps(raw))\nec = {'RandomString':\
  \ password }\ndemisto.results(create_entry('RandomString Generated.',raw, ec))\n"
scripttarget: 0
subtype: python2
tags: []
tests:
- RandomStringGenerateTest
toversion: 4.1.9
type: python
