args:
- description: The entry id of the excel file
  name: entryId
  required: true
comment: The automation takes Excel file (entryID) as an input and parses its content
  to the war room and context
commonfields:
  id: ParseExcel
  version: -1
dockerimage: demisto/xlrd
enabled: true
name: ParseExcel
outputs:
- contextPath: ParseExcel
  description: ParseExcel
runonce: false
script: "import xlrd\n\nfileEntryID = demisto.args()['entryId']\n\nres = demisto.executeCommand('getFilePath',\
  \ {'id': fileEntryID})\n\nfilePath = res[0]['Contents']['path']\n\nworkbook = xlrd.open_workbook(filePath,\
  \ on_demand = True)\nsheet_names = workbook.sheet_names()\nsheets = []\ncontext\
  \ = {}\n\nfor sheetnum in range(workbook.nsheets):\n    worksheet = workbook.sheet_by_index(sheetnum)\n\
  \    first_row = []\n    for col in range(worksheet.ncols):\n        first_row.append(\
  \ worksheet.cell_value(0,col) )\n    data =[]\n    for row in range(1, worksheet.nrows):\n\
  \        elm = {}\n        for col in range(worksheet.ncols):\n            elm[first_row[col]]=worksheet.cell_value(row,col)\n\
  \        data.append(elm)\n    sheets.append(data)\n    context[\"ParseExcel\"]\
  \ = sheets\n    demisto.results(\n                    {'Type' : entryTypes['note'],\n\
  \                    'Contents': data,\n                    'ContentsFormat' : formats['json'],\n\
  \                    'HumanReadable': tblToMd(sheet_names[sheetnum], data, first_row),\n\
  \                    'EntryContext': context\n    })"
scripttarget: 0
subtype: python2
tags: []
tests:
- ParseExcel-test
toversion: 4.1.9
type: python
