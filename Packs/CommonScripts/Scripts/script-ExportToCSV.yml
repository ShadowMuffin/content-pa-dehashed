args:
- default: true
  description: output filename
  name: fileName
  required: true
- description: Array to export
  isArray: true
  name: csvArray
  required: true
- description: Array to hold the file headers in order.  Also excepts a comma separated
    list.
  isArray: true
  name: headers
comment: Export given array to csv file
commonfields:
  id: ExportToCSV
  version: -1
enabled: true
name: ExportToCSV
runonce: false
script: "function valueToValidString(value) {\n    if (typeof value === 'number' ||\
  \ typeof value === 'boolean' ) {\n        value = value.toString();\n    }\n   \
  \ else if (typeof value === 'object') {\n        value = JSON.stringify(value);\n\
  \    }\n    value = value.trim().replace(/\\n/g, '\\\\n').replace(/\"/g, '\"\"');\n\
  \    if (value && value.indexOf(',') > -1) {\n        value = '\"' + value + '\"\
  ';\n    }\n    return value;\n}\n\nfunction extractHeaders(objArray) {\n    var\
  \ headersInOrder = [];\n    var headers = {};\n    for(var i = 0; i < objArray.length;\
  \ i++){\n        var objHeaders = Object.keys(objArray[i]);\n        for(var j =\
  \ 0; j < objHeaders.length; j++){\n            header = objHeaders[j];\n       \
  \     if (!headers.hasOwnProperty(objHeaders[j])) {\n                headersInOrder.push(objHeaders[j]);\n\
  \                // maintain a map to enable quick check if the header was added\
  \ before\n                headers[header] = '';\n            }\n        }\n    }\n\
  \n    return headersInOrder;\n}\n\nfunction convertToCSV(objArray, headers) {\n\
  \    // if objArray is an array of strings then return a single line of values\n\
  \    if (typeof objArray[0] !== 'object') {\n        // add headrs line\n      \
  \  if (headers && headers.length >= objArray.length){\n            headers = headers.slice(0,\
  \ objArray.length);\n            return headers.join() + '\\n' + objArray.join();\n\
  \        }\n        return objArray.join();\n    }\n    // create file headers\n\
  \    if (!headers) {\n        headers = extractHeaders(objArray);\n    }\n    //\
  \ collect values into rows\n    var rows = [];\n\n    for(var i = 0; i < objArray.length;\
  \ i++){\n        obj = objArray[i];\n        if (typeof obj !== 'object') {\n  \
  \          throw \"Array contains '\" + typeof obj + \"' member: '\" + obj + \"\
  '\" ;\n        }\n        var row = [];\n        // loop on headersInOrder to extract\
  \ values from the object and add to 'row' to match headers order.\n        for(var\
  \ j = 0; j < headers.length; j++){\n            header = headers[j];\n         \
  \   var value = '';\n            if (obj.hasOwnProperty(header)) {\n           \
  \     value = valueToValidString(obj[header]);\n            }\n            row.push(value);\n\
  \        }\n        rows.push(row);\n    }\n\n    // create file content\n    var\
  \ fileContent = headers.join() + '\\r';\n    for (var i = 0; i < rows.length;  i++)\
  \ {\n        var line = rows[i].join();\n        fileContent += '\\n' + line ;\n\
  \    }\n    return fileContent;\n}\n\n// string was passed as input\nif (typeof\
  \ args.csvArray === 'string') {\n    // add array brackets if missing from string\n\
  \    args.csvArray = args.csvArray[0] == '[' ? args.csvArray : '[' + args.csvArray\
  \ + ']'\n    // try to parse string to json\n    try {\n        args.csvArray =\
  \ JSON.parse(args.csvArray);\n    } catch (err) {\n        return {\n          \
  \  Type: entryTypes.error,\n            ContentFormat: formats.text,\n         \
  \   Contents: 'The csvArray that was passed was not array!'\n        };\n    }\n\
  }\n// json object passed as input\nif (!Array.isArray(args.csvArray)) {\n    //wrap\
  \ in an array\n    args.csvArray = [args.csvArray];\n}\nif (args.headers && !Array.isArray(args.headers)){\n\
  \    args.headers = args.headers.split(',');\n}\n\nvar csvString = convertToCSV(args.csvArray,\
  \ args.headers);\nvar createdFileID = saveFile(csvString);\n\nreturn {\n    Type:\
  \ 3,\n    FileID: createdFileID,\n    File: args.fileName,\n    Contents: args.fileName\n\
  };"
scripttarget: 0
tags:
- Utility
- csv
toversion: 4.1.9
type: javascript
