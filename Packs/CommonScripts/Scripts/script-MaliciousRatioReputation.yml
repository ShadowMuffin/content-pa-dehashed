args:
- description: Value of the indicator.
  name: input
- defaultValue: '0.3'
  description: 'Malicious ratio threshold to set indicator as suspicious. '
  name: threshold
comment: 'Set indicator reputation to "suspicious" when malicious ratio is above threshold.

  Malicious ratio is the ration between number of "bad" incidents to total number
  of incidents the indicator appears in.'
commonfields:
  id: MaliciousRatioReputation
  version: -1
enabled: true
fromversion: 4.0.0
name: MaliciousRatioReputation
runonce: false
script: "def get_indicator_from_value(indicator_value):\n    try:\n        res = demisto.executeCommand(\"\
  findIndicators\", {'value': indicator_value})\n        indicator = res[0]['Contents'][0]\n\
  \        return indicator\n    except:\n        pass\n\nindicator_value = demisto.args()['input']\n\
  indicator = get_indicator_from_value(indicator_value)\nif indicator:\n    res =\
  \ demisto.executeCommand(\"maliciousRatio\", {'value': indicator['value']})\n  \
  \  try:\n        mr_score = res[0]['Contents'][0]['maliciousRatio']\n        if\
  \ mr_score > float(demisto.args()['threshold']):\n            ec = {}\n        \
  \    ec['DBotScore'] = {\n                'Type': indicator['indicator_type'].lower(),\n\
  \                'Score': 2, #suspicious\n                'Vendor': 'DBot-MaliciousRatio',\n\
  \                'Indicator': indicator['value']\n            }\n            entry\
  \ = {\n                'Type': entryTypes['note'],\n                'EntryContext':\
  \ ec,\n                'Contents': ec['DBotScore']['Score'],\n                'ContentsFormat':\
  \ formats['text'],\n                'HumanReadable': 'Malicious ratio for %s is\
  \ %.2f' % (indicator['value'], mr_score),\n                'ReadableContentsFormat':\
  \ formats['markdown']\n            }\n            demisto.results(entry)\n    except:\n\
  \        pass"
scripttarget: 0
subtype: python2
tags:
- reputation
toversion: 4.1.9
type: python
