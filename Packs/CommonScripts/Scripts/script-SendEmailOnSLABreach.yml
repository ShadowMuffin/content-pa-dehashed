comment: 'Sends an email informing the user of an SLA breach. The email is sent to
  the user who is assigned to the incident. It includes the incident name, ID, name
  of the SLA field that was breached, duration of that SLA field, and the date and
  time when that SLA was started.

  In order to run successfully, the script should be configured to trigger on SLA
  breach, through field edit mode.'
commonfields:
  id: SendEmailOnSLABreach
  version: -1
enabled: true
name: SendEmailOnSLABreach
runas: DBotWeakRole
runonce: false
script: "\"\"\"\nThis script is used to send an email about a breached SLA. The script,\
  \ by default, sends the email to the assignee of the\nincident. The email is sent\
  \ using the send-email command, using all enabled integrations that support the\
  \ command.\n\"\"\"\n\ndef get_owner_email():\n    owner_username = demisto.incidents()[0].get(\"\
  owner\")\n    if owner_username:\n        try:\n            owner_info = demisto.executeCommand('getUserByUsername',\
  \ {\"username\":owner_username})[0]\n            owner_email = owner_info.get(\"\
  EntryContext\").get(\"UserByUsername\").get(\"email\")\n            return owner_email\n\
  \        except Exception, ex:\n            demisto.results\n            ({\n  \
  \              \"Type\" : entryTypes[\"error\"],\n                \"ContentsFormat\"\
  \ : formats[\"text\"],\n                \"Contents\" : \"Could not retrieve user\
  \ email. Maybe the user has no associated email to it.\\\n            Error: {}\"\
  .format(ex)\n\n            })\n            return\n    else:\n            demisto.results\n\
  \            ({\n                \"Type\" : entryTypes[\"error\"],\n           \
  \     \"ContentsFormat\" : formats[\"text\"],\n                \"Contents\" : \"\
  An email can't be sent to the owner of the incident, because no owner was assigned.\"\
  \n\n            })\n\ndef get_subject():\n    incident_name = demisto.incidents()[0].get(\"\
  name\")\n    incident_id = demisto.incidents()[0].get(\"id\")\n    subject = \"\
  SLA Breached in incident \\\"{}\\\" #{}\".format(incident_name, incident_id)\n \
  \   return subject\n\ndef send_email(to, subject, body):\n    demisto.results(demisto.executeCommand('send-mail',\
  \ {\n        \"to\": to,\n        \"subject\": subject,\n        \"body\": body}))\n\
  \ndef get_body():\n    field_name = demisto.args().get(\"field\").get(\"cliName\"\
  )\n    sla = demisto.args().get(\"fieldValue\").get(\"sla\")\n    start_date = demisto.args().get(\"\
  fieldValue\").get(\"startDate\")\n    body = \"We have detected a breach in your\
  \ SLA \\\"{}\\\".\\nThe SLA was set to {} minute and was started on {}.\".format(\n\
  \        field_name, sla, start_date.split(\".\")[0])\n    return body\n\nemail_to\
  \ = get_owner_email()\nemail_subject = get_subject()\nemail_body = get_body()\n\n\
  if email_to:\n    send_email(email_to, email_subject, email_body)"
scripttarget: 0
subtype: python2
tags:
- sla
- example
tests:
- No test - Can't test script that triggers on SLA breach. Need a field to trigger
  it and need a configured mail sender. Also errors aren't accounted.
toversion: 4.1.9
type: python
