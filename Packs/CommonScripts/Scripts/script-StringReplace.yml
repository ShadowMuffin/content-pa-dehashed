args:
- default: true
  description: The string to preform replace on
  name: data
  required: true
- description: The regex to find matches to be replaced with a new value
  name: regex
  required: true
- description: The new value to replace the regex match. Pass '' to remove regex match.
  name: newValue
  required: true
- auto: PREDEFINED
  defaultValue: 'true'
  description: Pass true to replace all matches, false to replace only the first occurrence.
  name: replaceAll
  predefined:
  - 'true'
  - 'false'
- auto: PREDEFINED
  defaultValue: 'true'
  description: Pass True to preform case-insensitive search and replace, false for
    case-sensitive.
  name: caseInsensitive
  predefined:
  - 'true'
  - 'false'
- auto: PREDEFINED
  defaultValue: 'true'
  description: Pass true to indicate 'data'  is a multi-line string, false otherwise.
  name: multiLine
  predefined:
  - 'true'
  - 'false'
comment: 'Replaces regex match/es in string.

  Returns the string after replace was preformed.'
commonfields:
  id: StringReplace
  version: -1
enabled: true
name: StringReplace
outputs:
- contextPath: StringReplace.Result
  description: The string after replace was preformed
script: "if ((typeof args.data) !== 'string') {\n    return {\n        Type: entryTypes.error,\n\
  \        ContentsFormat: formats.text,\n        Contents: 'Invalid input - please\
  \ make sure \\'data\\' is of type string'\n    }\n}\n\nvar arr = [];\nif (args.replaceAll\
  \ === 'true') {\n    arr.push('g');\n}\nif (args.caseInsensitive === 'true') {\n\
  \    arr.push('i');\n}\nif (args.multiLine === 'true') {\n    arr.push('m');\n}\n\
  \nvar newValue = args.newValue === \"''\" ? \"\" : args.newValue;\nvar r = new RegExp(args.regex,\
  \ arr.join(''));\nvar val = args.data.replace(r, newValue);\n\n//if no match found\
  \ - return the original string\nsetContext('StringReplace.Result', val);\nreturn\
  \ {\n    Type: entryTypes.note,\n    Contents: val,\n    ContentsFormat: formats.text\n\
  };"
scripttarget: 0
tags:
- Utility
toversion: 4.1.9
type: javascript
