args:
- auto: PREDEFINED
  defaultValue: all
  description: Type of hash to get (MD5,SHA1,SHA256,all)
  name: hash
  predefined:
  - MD5
  - SHA1
  - SHA256
  - all
comment: Gets hashes (MD5,SHA1,SHA256) from context.
commonfields:
  id: ContextGetHashes
  version: -1
enabled: true
name: ContextGetHashes
script: "var hash = args.hash;\nvar flat = {};\nvar res = [];\nvar currentValue;\n\
  flattenFields(invContext,undefined,flat);\nkeysArr = Object.keys(flat);\nfor (var\
  \ i = 0; i < keysArr.length; i++) {\n    currentValue=flat[keysArr[i]];\n    if\
  \ (hashRegex.test(currentValue) && res.indexOf(currentValue) === -1) {\n       \
  \ switch(hash) {\n        case 'MD5':\n            if (currentValue.length === 32)\
  \ {\n                res.push(currentValue);\n            }\n            break;\n\
  \        case 'SHA1':\n            if (flat[keysArr[i]].length === 40) {\n     \
  \           res.push(currentValue);\n            }\n            break;\n       \
  \ case 'SHA256':\n            if (flat[keysArr[i]].length === 64) {\n          \
  \      res.push(currentValue);\n            }\n            break;\n        case\
  \ 'all':\n            if ([32,40,64].indexOf(flat[keysArr[i]].length) > -1) {\n\
  \                res.push(currentValue);\n            }\n            break;\n  \
  \      default:\n        }\n    }\n}\nvar md = '### Hashes (' + hash + ') in context\\\
  n';\nfor (var i = 0; i<res.length; i++) {\n    md += '- ' + res[i] + '\\n';\n}\n\
  return {\n        Type: entryTypes.note,\n        Contents: res,\n        ContentsFormat:\
  \ formats.json,\n        HumanReadable: md\n        };\n\n"
scripttarget: 0
tags: []
toversion: 4.1.9
type: javascript
